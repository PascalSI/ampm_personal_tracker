<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\GT1022.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\GT1022.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Sat Feb 27 15:37:38 2016
<BR><P>
<H3>Maximum Stack Usage =        776 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; AppRun &rArr; SysSleep &rArr; TrackerTask &rArr; PedometerTask &rArr; ambo_step_detect &rArr; b2_filter
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[104]">UploadConfigTask_WaitRetry</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[102]">UploadConfigTask_Retry</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[c8]">UploadConfig_Task</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[c2]">SendPowerCmdTask_Retry</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[c3]">SendPowerCmd_GprsTask</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[b0]">SendGpsDataTask_Retry</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[b2]">SendGpsData_GprsTask</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[6f]">Gprs_Task</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[ab]">GprsTask_Stop</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[15]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[3d]">CallBusy</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[3f]">CallCancel</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[43]">CallErrorReport</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[3e]">CallNoAnswer</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[45]">CallOutProcess</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[41]">CellLocateParser</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[1f]">DAC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[6]">DMA0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[7]">DMA1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[8]">DMA2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[9]">DMA3_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[48]">GPGGA_Process</a> from gps.o(.text) referenced from gps.o(.constdata)
 <LI><a href="#[49]">GPGSA_Process</a> from gps.o(.text) referenced from gps.o(.constdata)
 <LI><a href="#[4a]">GPGSV_Process</a> from gps.o(.text) referenced from gps.o(.constdata)
 <LI><a href="#[47]">GPRMC_Process</a> from gps.o(.text) referenced from gps.o(.constdata)
 <LI><a href="#[39]">GPRS_CloseSocket</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[38]">GPRS_CloseSocket1</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[3c]">GPRS_CreateSocket</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[36]">GPRS_Deactivation</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[40]">GPRS_GetDNS</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[37]">GPRS_GetData</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[35]">GPRS_GetLength</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[3a]">GPRS_SocketControl</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[42]">GetBatteryStatus</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[31]">GetCallerNumber</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[46]">GsmGetTime</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[2]">HardFault_Handler</a> from project_main.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[f]">I2C1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[d]">LLW_IRQHandler</a> from llwu.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[22]">LPTimer_IRQHandler</a> from tick.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[21]">MCG_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from nmi_isr_handler.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1c]">PIT_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[24]">PORTA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[25]">PORTD_IRQHandler</a> from project_main.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1b]">RTC_Seconds_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1d]">Reserved39_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[23]">Reserved45_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[32]">RingCallProcess</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[44]">SMS_ModemOk</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[34]">SMS_NewMessage</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[33]">SMS_Process</a> from at_command_parser.o(.text) referenced 3 times from at_command_parser.o(.constdata)
 <LI><a href="#[3b]">SMS_ReadMsg</a> from at_command_parser.o(.text) referenced from at_command_parser.o(.constdata)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from tick.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_mkl25z4.o(.text) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[17]">TPM0_IRQHandler</a> from dbg_cfg_app.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[18]">TPM1_IRQHandler</a> from audio.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[19]">TPM2_IRQHandler</a> from dtmf_app.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[20]">TSI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from uart.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from uart.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1e]">USB0_IRQHandler</a> from usbhw.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[2f]">USB_EndPoint0</a> from usbcore.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[30]">USB_EndPoint1</a> from usbuser.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[2a]">_sbackspace</a> from _sgetc.o(.text) referenced 2 times from __0sscanf.o(.text)
 <LI><a href="#[2b]">_scanf_char_input</a> from scanf_char.o(.text) referenced from scanf_char.o(.text)
 <LI><a href="#[29]">_sgetc</a> from _sgetc.o(.text) referenced 2 times from __0sscanf.o(.text)
 <LI><a href="#[2d]">_sputc</a> from printf8.o(i._sputc) referenced from printf8.o(i.__0sprintf$8)
 <LI><a href="#[2e]">_sputc</a> from printfa.o(i._sputc) referenced from printfa.o(i.__0vsprintf)
 <LI><a href="#[2c]">isspace</a> from isspace_o.o(.text) referenced 2 times from scanf_char.o(.text)
 <LI><a href="#[26]">main</a> from project_main.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[234]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[4b]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[224]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[235]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[236]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[237]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[238]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[239]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, project_main.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>PIN_InterruptInit</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, project_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = PIN_InterruptInit &rArr; llwu_configure
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llwu_configure
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
</UL>

<P><STRONG><a name="[25]"></a>PORTD_IRQHandler</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, project_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PORTD_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioEnable
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>SysPwrOff</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, project_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = SysPwrOff &rArr; AudioPlayFile &rArr; SetLowPowerModes &rArr; LowPowerModes &rArr; vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_InterruptInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5b]"></a>SysSleep</STRONG> (Thumb, 618 bytes, Stack size 16 bytes, project_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 736<LI>Call Chain = SysSleep &rArr; TrackerTask &rArr; PedometerTask &rArr; ambo_step_detect &rArr; b2_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_DeInit
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_IsAlarmActivated
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_GetPhase
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_GetPhase
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetPhase
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioEnable
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_InterruptInit
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[66]"></a>AppRun</STRONG> (Thumb, 672 bytes, Stack size 32 bytes, project_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 768<LI>Call Chain = AppRun &rArr; SysSleep &rArr; TrackerTask &rArr; PedometerTask &rArr; ambo_step_detect &rArr; b2_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_IsAlarmActivated
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_GetPhase
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_GetPhase
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_GetPhase
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StartTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetPhase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopCheck
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 1072 bytes, Stack size 8 bytes, project_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 776<LI>Call Chain = main &rArr; AppRun &rArr; SysSleep &rArr; TrackerTask &rArr; PedometerTask &rArr; ambo_step_detect &rArr; b2_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;llwu_configure
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_Init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerInit
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Init
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Init
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTaskInit
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_PowerOff
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_init
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keys_Init
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Init
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Init
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSInit
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_InterruptInit
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[a1]"></a>clockMonitor</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, power_management.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[98]"></a>uart_configure</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, power_management.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[8b]"></a>PEE_to_BLPE</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, power_management.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pee_pbe
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbe_blpe
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[8f]"></a>vlp_clock_config</STRONG> (Thumb, 1228 bytes, Stack size 24 bytes, power_management.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;what_mcg_mode
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pee_pbe
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbe_pee
<LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbe_fbe
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fbi
<LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fbe
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fei
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fbe
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_blpi
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_pbe
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fbi
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_blpe
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit_vlpr
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpi_fbi
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpe_pbe
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpe_fbe
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEE_to_BLPE
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_configure
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockMonitor
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
</UL>

<P><STRONG><a name="[a2]"></a>LowPowerModes</STRONG> (Thumb, 350 bytes, Stack size 16 bytes, power_management.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = LowPowerModes &rArr; vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;what_mcg_mode
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbe_pee
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit_vlpr
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_vlpr
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;enter_lls
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockMonitor
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
</UL>

<P><STRONG><a name="[55]"></a>SetLowPowerModes</STRONG> (Thumb, 498 bytes, Stack size 8 bytes, power_management.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = SetLowPowerModes &rArr; LowPowerModes &rArr; vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Init
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[a6]"></a>BLPE_to_PEE</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, power_management.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbe_pee
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpe_pbe
</UL>

<P><STRONG><a name="[86]"></a>GsmTask_Init</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[60]"></a>GprsTask_GetPhase</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GprsTask_GetPhase
</UL>
<BR>[Calls]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_GetPhase
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmLedControl
</UL>

<P><STRONG><a name="[a8]"></a>GprsTask_StopTask</STRONG> (Thumb, 102 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 536<LI>Call Chain = GprsTask_StopTask &rArr; Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Stop
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_Cancel
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetPhase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
</UL>

<P><STRONG><a name="[ab]"></a>GprsTask_Stop</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 544<LI>Call Chain = GprsTask_Stop &rArr; GprsTask_StopTask &rArr; Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_WaitRetry
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Retry
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Start
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_EndCall
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmdTask_Retry
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsDataTask_Retry
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[ac]"></a>GprsTask_SetPhase</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_SetPhase
</UL>

<P><STRONG><a name="[ae]"></a>GprsTask_WakeUp</STRONG> (Thumb, 84 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_WakeUp
</UL>

<P><STRONG><a name="[67]"></a>GprsTask_StartTask</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[b0]"></a>SendGpsDataTask_Retry</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + In Cycle
<LI>Call Chain = SendGpsDataTask_Retry &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[71]"></a>GsmTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[b2]"></a>SendGpsData_GprsTask</STRONG> (Thumb, 2988 bytes, Stack size 48 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + In Cycle
<LI>Call Chain = SendGpsData_GprsTask &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetCriticalCmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsCriticalCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_GetPhase
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetSocket
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_DisconectSocket
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsGprsDataPacket
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackerMsg
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTrackerMsgIsReady
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsDataTask_Retry
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_GetPhase
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[c2]"></a>SendPowerCmdTask_Retry</STRONG> (Thumb, 162 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + In Cycle
<LI>Call Chain = SendPowerCmdTask_Retry &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
</UL>

<P><STRONG><a name="[c3]"></a>SendPowerCmd_GprsTask</STRONG> (Thumb, 2106 bytes, Stack size 48 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 520 + In Cycle
<LI>Call Chain = SendPowerCmd_GprsTask &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetCriticalCmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsCriticalCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_GetPhase
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetSocket
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_DisconectSocket
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IsGprsDataPacket
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWO_Add
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWF_Add
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmdTask_Retry
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_GetPhase
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[6f]"></a>Gprs_Task</STRONG> (Thumb, 364 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 528 + In Cycle
<LI>Call Chain = Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_IsIdle
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_IsWaitingForRetryTimedOut
<LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_IsWaitingForRetry
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_IsIdle
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_GetPhase
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StartTask
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[87]"></a>GprsTask_Init</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GprsTask_Init &rArr; UploadConfigTask_Init &rArr; InitTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[fa]"></a>GprsTask_GetTask</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
</UL>

<P><STRONG><a name="[6a]"></a>Gsm_Task</STRONG> (Thumb, 1888 bytes, Stack size 24 bytes, gsm_gprs_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = Gsm_Task &rArr; MODEM_GetCSQ &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_GetPhase
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[70]"></a>SosTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, sos_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Start
<LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayAlarmWarningSound
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsDataTask_Retry
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[d3]"></a>ResetAllAlarmWarning</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, sos_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Start
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Reset
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[d2]"></a>SosTask_Reset</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = SosTask_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAllAlarmWarning
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[88]"></a>SosTask_Init</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SosTask_Init &rArr; SosTask_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Reset
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[d4]"></a>SosTask_InitPromptTimeOut</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = SosTask_InitPromptTimeOut &rArr; InitTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[d5]"></a>SosTask_PromptForWaiting</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = SosTask_PromptForWaiting &rArr; AudioPlayFile &rArr; SetLowPowerModes &rArr; LowPowerModes &rArr; vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[d6]"></a>SosTask_Start</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = SosTask_Start &rArr; DSOS_Add &rArr; formatLatLng &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearCallAction
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAllAlarmWarning
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[d9]"></a>SosTask_End</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = SosTask_End &rArr; GprsTask_Stop &rArr; GprsTask_StopTask &rArr; Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearCallAction
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Stop
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAllAlarmWarning
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StartTask
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[fe]"></a>SosTask_IsCancelCall</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sos_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
</UL>

<P><STRONG><a name="[61]"></a>SosTask_IsAlarmActivated</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, sos_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
</UL>

<P><STRONG><a name="[fc]"></a>SosTask_IsWaititngForCall</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, sos_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
</UL>

<P><STRONG><a name="[db]"></a>ComparePhoneNumber</STRONG> (Thumb, 180 bytes, Stack size 40 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ComparePhoneNumber
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[dc]"></a>SosTask_SendSms</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SosTask_SendSms &rArr; SmsTask_SetMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetMessage
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SendSms
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_ClearAllSms
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_AddPhoneNo
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[6b]"></a>Sos_Task</STRONG> (Thumb, 2714 bytes, Stack size 16 bytes, sos_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = Sos_Task &rArr; VoiceCallTask_EndCall &rArr; GprsTask_Stop &rArr; GprsTask_StopTask &rArr; Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_StartCall
<LI><a href="#[e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_IsDtmfKeyPressed
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetCallerPhoneNo
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_EndCall
<LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_DeInitDtmf
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearEndCallStatus
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearCallAction
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_AnswerCall
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Stop
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetMessage
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SendSms
<LI><a href="#[e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_IsSmsSent
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_ClearAllSms
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_AddAllContactPhoneNo
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_EnableGps
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_SendSms
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparePhoneNumber
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_PromptForWaiting
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_InitPromptTimeOut
<LI><a href="#[d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ResetAllAlarmWarning
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_IsIdle
<LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_IsIdle
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_GetPhase
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_GetPhase
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StartTask
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[ec]"></a>PlayBatteryStatus</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 180<LI>Call Chain = PlayBatteryStatus &rArr; AudioPlayFile &rArr; SetLowPowerModes &rArr; LowPowerModes &rArr; vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
</UL>

<P><STRONG><a name="[53]"></a>VoiceCallTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayAlarmWarningSound
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTD_IRQHandler
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>

<P><STRONG><a name="[ed]"></a>PlayAlarmWarningSound</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = PlayAlarmWarningSound
</UL>
<BR>[Calls]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>

<P><STRONG><a name="[82]"></a>Keys_Init</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_Init
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTask_Control
</UL>

<P><STRONG><a name="[ee]"></a>IoTask_Init</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IoTask_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keys_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[e9]"></a>VoiceCallTask_AnswerCall</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VoiceCallTask_AnswerCall &rArr; InitTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[e6]"></a>VoiceCallTask_EndCall</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = VoiceCallTask_EndCall &rArr; GprsTask_Stop &rArr; GprsTask_StopTask &rArr; Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[89]"></a>VoiceCallTask_Init</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6c]"></a>Io_Task</STRONG> (Thumb, 1090 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 560<LI>Call Chain = Io_Task &rArr; VoiceCallTask_EndCall &rArr; GprsTask_Stop &rArr; GprsTask_StopTask &rArr; Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVersion
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_Init
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_EndCall
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_AnswerCall
<LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_EnableGps
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Start
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Reset
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_Init
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_IsAlarmActivated
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Init
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StartTask
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetPhase
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[f0]"></a>VoiceCallTask_InitDtmf</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = VoiceCallTask_InitDtmf &rArr; DTMF_Init &rArr; TPM2_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
</UL>

<P><STRONG><a name="[e7]"></a>VoiceCallTask_DeInitDtmf</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VoiceCallTask_DeInitDtmf &rArr; DTMF_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[f3]"></a>GetDtmfKey</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GetDtmfKey
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
</UL>

<P><STRONG><a name="[e5]"></a>VoiceCallTask_IsDtmfKeyPressed</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[e4]"></a>VoiceCallTask_ClearEndCallStatus</STRONG> (Thumb, 42 bytes, Stack size 4 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = VoiceCallTask_ClearEndCallStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_StartCall
<LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearCallAction
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[c6]"></a>VoiceCallTask_IsIdle</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_StartCall
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[e3]"></a>VoiceCallTask_StartCall</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VoiceCallTask_StartCall &rArr; VoiceCallTask_ClearEndCallStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearEndCallStatus
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_IsIdle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[e8]"></a>VoiceCallTask_GetCallerPhoneNo</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[ff]"></a>VoiceCallTask_IsModemBusy</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
</UL>

<P><STRONG><a name="[d7]"></a>VoiceCallTask_ClearCallAction</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = VoiceCallTask_ClearCallAction &rArr; VoiceCallTask_ClearEndCallStatus &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearEndCallStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[e0]"></a>SmsTask_SendSms</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_SendSms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
</UL>

<P><STRONG><a name="[f5]"></a>SmsTask_SetSosGGLinkMessage</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SmsTask_SetSosGGLinkMessage &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
</UL>

<P><STRONG><a name="[ea]"></a>SmsTask_AddAllContactPhoneNo</STRONG> (Thumb, 78 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SmsTask_AddAllContactPhoneNo
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
</UL>

<P><STRONG><a name="[dd]"></a>SmsTask_ClearAllSms</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SmsTask_ClearAllSms
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_SendSms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Init
</UL>

<P><STRONG><a name="[f8]"></a>SmsTask_SetSosAddressMessage</STRONG> (Thumb, 446 bytes, Stack size 56 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = SmsTask_SetSosAddressMessage &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
</UL>

<P><STRONG><a name="[6e]"></a>Sms_Task</STRONG> (Thumb, 1324 bytes, Stack size 16 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Sms_Task &rArr; SmsTask_SetSosAddressMessage &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetWait
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetSosAddressMessage
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetSosGGLinkMessage
<LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SendSms
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_ClearAllSms
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_AddAllContactPhoneNo
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_IsIdle
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_GetPhase
<LI><a href="#[fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetTask
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_GetPhase
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Pause
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[fb]"></a>SmsTask_Pause</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SmsTask_Pause &rArr; Sms_Task &rArr; SmsTask_SetSosAddressMessage &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
</UL>

<P><STRONG><a name="[6d]"></a>VoiceCall_Task</STRONG> (Thumb, 2326 bytes, Stack size 16 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 568<LI>Call Chain = VoiceCall_Task &rArr; VoiceCallTask_EndCall &rArr; GprsTask_Stop &rArr; GprsTask_StopTask &rArr; Gprs_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSetup
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Pause
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDtmfKey
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_InitDtmf
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayBatteryStatus
<LI><a href="#[e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetCallerPhoneNo
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_EndCall
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_AnswerCall
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparePhoneNumber
<LI><a href="#[fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_IsWaititngForCall
<LI><a href="#[fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_IsCancelCall
<LI><a href="#[d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Reset
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_GetPhase
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_IsAlarmActivated
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[8a]"></a>SmsTask_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SmsTask_Init &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_ClearAllSms
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[de]"></a>SmsTask_AddPhoneNo</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SmsTask_AddPhoneNo
</UL>
<BR>[Calls]<UL><LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_SendSms
</UL>

<P><STRONG><a name="[df]"></a>SmsTask_SetMessage</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SmsTask_SetMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_SendSms
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[c7]"></a>SmsTask_IsIdle</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[100]"></a>SmsTask_IsModemBusy</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Stop
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
</UL>

<P><STRONG><a name="[b1]"></a>IoTask_IsModemBusy</STRONG> (Thumb, 26 bytes, Stack size 4 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = IoTask_IsModemBusy
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_IsModemBusy
<LI><a href="#[ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_IsModemBusy
</UL>
<BR>[Called By]<UL><LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Retry
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmdTask_Retry
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsDataTask_Retry
</UL>

<P><STRONG><a name="[e2]"></a>SmsTask_IsSmsSent</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[5f]"></a>SmsTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, io_tasks.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
</UL>

<P><STRONG><a name="[da]"></a>SmsTask_Stop</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, io_tasks.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SmsTask_Stop
</UL>
<BR>[Calls]<UL><LI><a href="#[100]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_IsModemBusy
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[cb]"></a>UploadConfigTask_Init</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, upload_config_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = UploadConfigTask_Init &rArr; InitTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_WaitRetry
<LI><a href="#[103]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_StopAll
<LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Start
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Init
</UL>

<P><STRONG><a name="[101]"></a>UploadConfigTask_Start</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, upload_config_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_GetPhase
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
</UL>

<P><STRONG><a name="[c9]"></a>UploadConfigTask_IsWaitingForRetry</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, upload_config_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[ca]"></a>UploadConfigTask_IsWaitingForRetryTimedOut</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, upload_config_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UploadConfigTask_IsWaitingForRetryTimedOut &rArr; CheckTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[a7]"></a>UploadConfigTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, upload_config_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetPhase
</UL>

<P><STRONG><a name="[ad]"></a>UploadConfigTask_SetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, upload_config_task.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_SetPhase
</UL>

<P><STRONG><a name="[af]"></a>UploadConfigTask_WakeUp</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, upload_config_task.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_WakeUp
</UL>

<P><STRONG><a name="[102]"></a>UploadConfigTask_Retry</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, upload_config_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12 + In Cycle
<LI>Call Chain = UploadConfigTask_Retry &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
</UL>

<P><STRONG><a name="[a9]"></a>UploadConfigTask_Stop</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, upload_config_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
</UL>

<P><STRONG><a name="[103]"></a>UploadConfigTask_StopAll</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, upload_config_task.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Init
</UL>

<P><STRONG><a name="[104]"></a>UploadConfigTask_WaitRetry</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, upload_config_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20 + In Cycle
<LI>Call Chain = UploadConfigTask_WaitRetry &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Init
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
</UL>

<P><STRONG><a name="[c8]"></a>UploadConfig_Task</STRONG> (Thumb, 2772 bytes, Stack size 56 bytes, upload_config_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 384 + In Cycle
<LI>Call Chain = UploadConfig_Task &rArr;  GprsTask_Stop (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFG_Parser
<LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFG_Add
<LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_WaitRetry
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Retry
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetCriticalCmd
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsCriticalCmd
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_GetPhase
<LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetSocket
<LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_DisconectSocket
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IoTask_IsModemBusy
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_Stop
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_GetPhase
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
</UL>

<P><STRONG><a name="[85]"></a>GpsTask_Init</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, gps_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>GpsTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
</UL>

<P><STRONG><a name="[e1]"></a>GpsTask_EnableGps</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, gps_task.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[23a]"></a>GpsTask_SetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, gps_task.o(.text), UNUSED)

<P><STRONG><a name="[107]"></a>GpsTask_Control</STRONG> (Thumb, 924 bytes, Stack size 32 bytes, gps_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 496<LI>Call Chain = GpsTask_Control &rArr; GPS_GetInfo &rArr; nmea_parse_GPRMC &rArr; _nmea_parse_time &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_zero_INFO
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLng
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLat
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRtcTime
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromGps
<LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Save
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FloatToU32
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
</UL>

<P><STRONG><a name="[77]"></a>start</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, start.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = start &rArr; uart_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;outSRS
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[119]"></a>cpu_identify</STRONG> (Thumb, 254 bytes, Stack size 4 bytes, start.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>

<P><STRONG><a name="[23b]"></a>flash_identify</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, start.o(.text), UNUSED)

<P><STRONG><a name="[11a]"></a>clk_out_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sysinit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[117]"></a>sysinit</STRONG> (Thumb, 154 bytes, Stack size 8 bytes, sysinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sysinit &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_out_init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[23c]"></a>enable_abort_button</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysinit.o(.text), UNUSED)

<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, system_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[11b]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, system_mkl25z4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, nmi_isr_handler.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[23d]"></a>enable_NMI_button</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, nmi_isr_handler.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[23e]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>llwu_configure</STRONG> (Thumb, 348 bytes, Stack size 12 bytes, llwu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = llwu_configure
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_InterruptInit
</UL>

<P><STRONG><a name="[23f]"></a>llwu_configure_filter</STRONG> (Thumb, 70 bytes, Stack size 12 bytes, llwu.o(.text), UNUSED)

<P><STRONG><a name="[d]"></a>LLW_IRQHandler</STRONG> (Thumb, 458 bytes, Stack size 8 bytes, llwu.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LLW_IRQHandler &rArr; LPTimerTask &rArr; LedControl &rArr; GsmLedControl &rArr; GprsTask_GetPhase
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[11d]"></a>pll_init</STRONG> (Thumb, 714 bytes, Stack size 56 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[11e]"></a>new_pll_freq</STRONG> (Thumb, 488 bytes, Stack size 48 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[8d]"></a>pee_pbe</STRONG> (Thumb, 108 bytes, Stack size 0 bytes, mcg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEE_to_BLPE
</UL>

<P><STRONG><a name="[97]"></a>pbe_pee</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = pbe_pee &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLPE_to_PEE
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[a0]"></a>pbe_fbe</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, mcg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[96]"></a>fbe_pbe</STRONG> (Thumb, 282 bytes, Stack size 40 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = fbe_pbe &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[8e]"></a>pbe_blpe</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, mcg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEE_to_BLPE
</UL>

<P><STRONG><a name="[9f]"></a>blpe_pbe</STRONG> (Thumb, 268 bytes, Stack size 32 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = blpe_pbe &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BLPE_to_PEE
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[9d]"></a>blpe_fbe</STRONG> (Thumb, 112 bytes, Stack size 0 bytes, mcg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[9a]"></a>fbe_blpe</STRONG> (Thumb, 66 bytes, Stack size 0 bytes, mcg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[120]"></a>fll_freq</STRONG> (Thumb, 326 bytes, Stack size 0 bytes, mcg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fei
<LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee_fei
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fee
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fee
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fee
<LI><a href="#[11f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fei
</UL>

<P><STRONG><a name="[11f]"></a>fbe_fei</STRONG> (Thumb, 212 bytes, Stack size 20 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
</UL>

<P><STRONG><a name="[99]"></a>fei_fbe</STRONG> (Thumb, 474 bytes, Stack size 20 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fei_fbe
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[121]"></a>fbe_fee</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[240]"></a>fee_fbe</STRONG> (Thumb, 106 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>fbe_fbi</STRONG> (Thumb, 376 bytes, Stack size 24 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = fbe_fbi &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[95]"></a>fbi_fbe</STRONG> (Thumb, 462 bytes, Stack size 20 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fbi_fbe
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[9c]"></a>fbi_blpi</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = fbi_blpi &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[93]"></a>blpi_fbi</STRONG> (Thumb, 100 bytes, Stack size 16 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = blpi_fbi &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[122]"></a>fbi_fee</STRONG> (Thumb, 546 bytes, Stack size 40 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[123]"></a>fee_fbi</STRONG> (Thumb, 354 bytes, Stack size 24 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[94]"></a>fbi_fei</STRONG> (Thumb, 202 bytes, Stack size 20 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = fbi_fei
</UL>
<BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[9b]"></a>fei_fbi</STRONG> (Thumb, 308 bytes, Stack size 24 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = fei_fbi &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[124]"></a>fei_fee</STRONG> (Thumb, 466 bytes, Stack size 48 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[125]"></a>fee_fei</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, mcg.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[120]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fll_freq
</UL>

<P><STRONG><a name="[90]"></a>what_mcg_mode</STRONG> (Thumb, 344 bytes, Stack size 0 bytes, mcg.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[8c]"></a>atc</STRONG> (Thumb, 488 bytes, Stack size 72 bytes, mcg.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;what_mcg_mode
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PEE_to_BLPE
</UL>

<P><STRONG><a name="[241]"></a>clk_monitor_0</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[242]"></a>chk_for_resistor</STRONG> (Thumb, 202 bytes, Stack size 8 bytes, mcg.o(.text), UNUSED)

<P><STRONG><a name="[118]"></a>outSRS</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, rcm.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
</UL>

<P><STRONG><a name="[243]"></a>sleep</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[244]"></a>deepsleep</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[245]"></a>enter_wait</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[246]"></a>enter_stop</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[a3]"></a>enter_vlpr</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, smc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
</UL>

<P><STRONG><a name="[91]"></a>exit_vlpr</STRONG> (Thumb, 64 bytes, Stack size 0 bytes, smc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
</UL>

<P><STRONG><a name="[247]"></a>enter_vlps</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>enter_lls</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, smc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = enter_lls
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
</UL>

<P><STRONG><a name="[248]"></a>enter_vlls3</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[249]"></a>enter_vlls2</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[24a]"></a>enter_vlls1</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[24b]"></a>enter_vlls0</STRONG> (Thumb, 136 bytes, Stack size 0 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[24c]"></a>enter_vlls0_nopor</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, smc.o(.text), UNUSED)

<P><STRONG><a name="[7c]"></a>uart_init</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = uart_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;start
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24d]"></a>uart_getchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[b6]"></a>uart_putchar</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Pause
<LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Stop
<LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_ClearAllSms
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_Cancel
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSMS
</UL>

<P><STRONG><a name="[cc]"></a>uart_putstr</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = uart_putstr
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSMS
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[24e]"></a>uart_getchar_present</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[7b]"></a>uart0_init</STRONG> (Thumb, 404 bytes, Stack size 56 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = uart0_init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Init
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ
<LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[24f]"></a>uart0_getchar</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[12f]"></a>uart0_putchar</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putstr
</UL>

<P><STRONG><a name="[12e]"></a>uart0_putstr</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, uart.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_putchar
</UL>

<P><STRONG><a name="[250]"></a>uart0_getchar_present</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, uart.o(.text), UNUSED)

<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = UART0_IRQHandler &rArr; GPS_ComnandParser
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
<LI><a href="#[130]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_ComnandParser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = UART1_IRQHandler &rArr; AT_ComnandParser &rArr; StrComnandParser &rArr; StrParserCtl
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
<LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ComnandParser
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[15a]"></a>SPI_Init</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTaskInit
</UL>

<P><STRONG><a name="[15c]"></a>halSpiWriteByte</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__GlobalProtect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362FifoRead
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362Read
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362Write
</UL>

<P><STRONG><a name="[a5]"></a>Flash_Init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, flash_ftfa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
</UL>

<P><STRONG><a name="[133]"></a>Flash_SectorErase</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, flash_ftfa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flash_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpSub (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Write
</UL>

<P><STRONG><a name="[135]"></a>Flash_ByteProgram</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, flash_ftfa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Flash_ByteProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpSub (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Write
</UL>

<P><STRONG><a name="[156]"></a>USB_ResetCore</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbcore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Suspend_Event
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
</UL>

<P><STRONG><a name="[136]"></a>USB_SetupStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_SetupStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[138]"></a>USB_DataInStage</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_DataInStage &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[13a]"></a>USB_DataOutStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_DataOutStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[13b]"></a>USB_StatusInStage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_StatusInStage &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[13c]"></a>USB_StatusOutStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_StatusOutStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[2f]"></a>USB_EndPoint0</STRONG> (Thumb, 756 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = USB_EndPoint0 &rArr; HID_SetReport &rArr; SetOutReport &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetAddress
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DirCtrlEP
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure_Event
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetReport
<LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetProtocol
<LI><a href="#[147]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetIdle
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetReport
<LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetProtocol
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetIdle
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetStatus
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetDescriptor
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[14d]"></a>USB_IntrEna</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_IntrEna &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[14e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL>

<P><STRONG><a name="[56]"></a>USB_Init</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_Init &rArr; USB_IntrEna &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IntrEna
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
</UL>

<P><STRONG><a name="[57]"></a>USB_Connect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
</UL>

<P><STRONG><a name="[151]"></a>USB_Reset</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[153]"></a>USB_Suspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[154]"></a>USB_Resume</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[251]"></a>USB_WakeUp</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[227]"></a>USB_WakeUpCfg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[14b]"></a>USB_SetAddress</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[229]"></a>USB_Configure</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[150]"></a>USB_ResetEP</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[14f]"></a>USB_ConfigEP</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[13d]"></a>USB_DirCtrlEP</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[22a]"></a>USB_EnableEP</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[228]"></a>USB_DisableEP</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[141]"></a>USB_SetStallEP</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[14c]"></a>USB_ClrStallEP</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ClrStallEP
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
</UL>
<BR>[Called By]<UL><LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[252]"></a>USB_ClearEPBuf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[137]"></a>USB_ReadEP</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutReport
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
<LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
</UL>

<P><STRONG><a name="[139]"></a>USB_WriteEP</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
<LI><a href="#[13b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHID_Task
</UL>

<P><STRONG><a name="[253]"></a>USB_GetFrame</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>USB0_IRQHandler</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB0_IRQHandler &rArr; USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[155]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Resume_Event
<LI><a href="#[152]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
<LI><a href="#[154]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Resume
<LI><a href="#[153]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Suspend
<LI><a href="#[151]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[152]"></a>USB_Reset_Event</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetCore
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[157]"></a>USB_Suspend_Event</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbuser.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[156]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetCore
</UL>

<P><STRONG><a name="[155]"></a>USB_Resume_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[143]"></a>USB_Configure_Event</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = USB_Configure_Event &rArr; GetInReport &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[30]"></a>USB_EndPoint1</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = USB_EndPoint1 &rArr; SetOutReport &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutReport
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[12b]"></a>RINGBUF_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ringbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Init
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_Init
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_CmdProcessInit
</UL>

<P><STRONG><a name="[131]"></a>RINGBUF_Put</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ringbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RINGBUF_Put
</UL>
<BR>[Called By]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutReport
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Task
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgUSBSendData
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgCfgPrintf
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_GetLength
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Process
</UL>

<P><STRONG><a name="[f4]"></a>RINGBUF_Get</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ringbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetDtmfKey
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM1_IRQHandler
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHID_Task
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Gets
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
</UL>

<P><STRONG><a name="[175]"></a>RINGBUF_GetFill</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ringbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
</UL>

<P><STRONG><a name="[159]"></a>SetOutReport</STRONG> (Thumb, 38 bytes, Stack size 80 bytes, hiduser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = SetOutReport &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
<LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetReport
</UL>

<P><STRONG><a name="[158]"></a>GetInReport</STRONG> (Thumb, 64 bytes, Stack size 80 bytes, hiduser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = GetInReport &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure_Event
<LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetReport
</UL>

<P><STRONG><a name="[145]"></a>HID_GetReport</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hiduser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = HID_GetReport &rArr; GetInReport &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[158]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[14a]"></a>HID_SetReport</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hiduser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HID_SetReport &rArr; SetOutReport &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[159]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutReport
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[146]"></a>HID_GetIdle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[147]"></a>HID_SetIdle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[148]"></a>HID_GetProtocol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[149]"></a>HID_SetProtocol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[7d]"></a>SST25_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SST25_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[15e]"></a>SST25_Erase</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SST25_Erase &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntSave
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageSave
</UL>

<P><STRONG><a name="[15f]"></a>_SST25_Write</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
<LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
</UL>

<P><STRONG><a name="[160]"></a>SST25_Write</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Save
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_disk_write
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadWriteCtrl
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntSave
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageSave
</UL>

<P><STRONG><a name="[161]"></a>SST25_Read</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Save
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_disk_read
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadWriteCtrl
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataInfo
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Load
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntLoad
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageLoad
</UL>

<P><STRONG><a name="[b3]"></a>ModemCmdTask_IsCriticalCmd</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[163]"></a>MODEM_FlushBuffer</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = MODEM_FlushBuffer
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Init
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSMS
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[65]"></a>MODEM_SendCommand</STRONG> (Thumb, 168 bytes, Stack size 56 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = MODEM_SendCommand &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFindData
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindData
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSetup
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_PowerOff
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Init
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
</UL>

<P><STRONG><a name="[83]"></a>MODEM_Init</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = MODEM_Init &rArr; MODEM_SendCommand &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_PowerOff
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[84]"></a>MODEM_PowerOff</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MODEM_PowerOff &rArr; MODEM_Init &rArr; MODEM_SendCommand &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b7]"></a>ModemCmdTask_SetCriticalCmd</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, modem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[69]"></a>ModemCmdTask_IsIdle</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, modem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetWait
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[b5]"></a>ModemCmdTask_SendCmd</STRONG> (Thumb, 128 bytes, Stack size 40 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = ModemCmdTask_SendCmd &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFindData
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
</UL>

<P><STRONG><a name="[b8]"></a>ModemCmdTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, modem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
</UL>

<P><STRONG><a name="[254]"></a>ModemCmdTask_Reset</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, modem.o(.text), UNUSED)

<P><STRONG><a name="[f9]"></a>ModemCmdTask_SetWait</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModemCmdTask_SetWait &rArr; InitFindData
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_IsIdle
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFindData
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
</UL>

<P><STRONG><a name="[68]"></a>ModemCmd_Task</STRONG> (Thumb, 514 bytes, Stack size 8 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = ModemCmd_Task &rArr; CheckTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmTask_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindData
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Pause
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_Cancel
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[aa]"></a>ModemCmdTask_Cancel</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ModemCmdTask_Cancel &rArr; ModemCmd_Task &rArr; CheckTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
</UL>

<P><STRONG><a name="[bc]"></a>MODEM_CheckGPRSDataOut</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MODEM_CheckGPRSDataOut &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFindData
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindData
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[167]"></a>MODEM_CloseSocket</STRONG> (Thumb, 122 bytes, Stack size 72 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = MODEM_CloseSocket &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFindData
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindData
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_DisconectSocket
</UL>

<P><STRONG><a name="[168]"></a>ParserCellLocate</STRONG> (Thumb, 316 bytes, Stack size 152 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 488<LI>Call Chain = ParserCellLocate &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
</UL>

<P><STRONG><a name="[c1]"></a>MODEM_DisconectSocket</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = MODEM_DisconectSocket &rArr; MODEM_CloseSocket &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[b9]"></a>MODEM_GetSocket</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, modem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[fd]"></a>VoiceSetup</STRONG> (Thumb, 166 bytes, Stack size 8 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = VoiceSetup &rArr; MODEM_SendCommand &rArr; __c89vsprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
</UL>

<P><STRONG><a name="[16a]"></a>MODEM_CheckResponse</STRONG> (Thumb, 354 bytes, Stack size 24 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = MODEM_CheckResponse &rArr; InitFindData
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFindData
<LI><a href="#[166]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FindData
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSMS
</UL>

<P><STRONG><a name="[b4]"></a>MODEM_GetCSQ</STRONG> (Thumb, 282 bytes, Stack size 24 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = MODEM_GetCSQ &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[16e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
</UL>

<P><STRONG><a name="[16f]"></a>SendSMS</STRONG> (Thumb, 112 bytes, Stack size 48 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SendSMS &rArr; MODEM_CheckResponse &rArr; InitFindData
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putchar
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
</UL>

<P><STRONG><a name="[170]"></a>MODEM_Gets</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = MODEM_Gets
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
</UL>

<P><STRONG><a name="[cd]"></a>GetIMEI</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, modem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = GetIMEI &rArr; MODEM_CheckResponse &rArr; InitFindData
</UL>
<BR>[Calls]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[170]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Gets
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[163]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_FlushBuffer
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
</UL>

<P><STRONG><a name="[171]"></a>AT_CmdProcessInit</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = AT_CmdProcessInit &rArr; StrParserInit
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Init
<LI><a href="#[172]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrParserInit
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ComnandParser
</UL>

<P><STRONG><a name="[132]"></a>AT_ComnandParser</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = AT_ComnandParser &rArr; StrComnandParser &rArr; StrParserCtl
</UL>
<BR>[Calls]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrComnandParser
<LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_CmdProcessInit
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART1_IRQHandler
</UL>

<P><STRONG><a name="[46]"></a>GsmGetTime</STRONG> (Thumb, 460 bytes, Stack size 4 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GsmGetTime &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[45]"></a>CallOutProcess</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[3f]"></a>CallCancel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[43]"></a>CallErrorReport</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[3e]"></a>CallNoAnswer</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[3d]"></a>CallBusy</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[42]"></a>GetBatteryStatus</STRONG> (Thumb, 110 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[41]"></a>CellLocateParser</STRONG> (Thumb, 144 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[31]"></a>GetCallerNumber</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[32]"></a>RingCallProcess</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[44]"></a>SMS_ModemOk</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[34]"></a>SMS_NewMessage</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[174]"></a>RemaskSocket</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_GetData
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_GetLength
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CloseSocket
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CloseSocket1
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SocketControl
</UL>

<P><STRONG><a name="[3a]"></a>GPRS_SocketControl</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPRS_SocketControl &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemaskSocket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[3c]"></a>GPRS_CreateSocket</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[38]"></a>GPRS_CloseSocket1</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = GPRS_CloseSocket1
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemaskSocket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[39]"></a>GPRS_CloseSocket</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPRS_CloseSocket
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemaskSocket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[33]"></a>SMS_Process</STRONG> (Thumb, 146 bytes, Stack size 8 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SMS_Process &rArr; RINGBUF_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[36]"></a>GPRS_Deactivation</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[35]"></a>GPRS_GetLength</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPRS_GetLength &rArr; RINGBUF_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
<LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemaskSocket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[bd]"></a>GPRS_CmdRecvData</STRONG> (Thumb, 408 bytes, Stack size 56 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = GPRS_CmdRecvData &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
<LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_GetFill
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[40]"></a>GPRS_GetDNS</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[37]"></a>GPRS_GetData</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = GPRS_GetData
</UL>
<BR>[Calls]<UL><LI><a href="#[174]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RemaskSocket
</UL>
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[3b]"></a>SMS_ReadMsg</STRONG> (Thumb, 268 bytes, Stack size 0 bytes, at_command_parser.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> at_command_parser.o(.constdata)
</UL>
<P><STRONG><a name="[c0]"></a>CMD_CfgParse</STRONG> (Thumb, 9116 bytes, Stack size 208 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 472<LI>Call Chain = CMD_CfgParse &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_EnableGps
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StartTask
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRtcTime
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[17d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntSave
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntLoad
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageSave
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageLoad
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingReset
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[176]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strstr
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
</UL>

<P><STRONG><a name="[74]"></a>SMS_Manage</STRONG> (Thumb, 836 bytes, Stack size 80 bytes, at_command_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 552<LI>Call Chain = SMS_Manage &rArr; CMD_CfgParse &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_putstr
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopAll
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[175]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_GetFill
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSMS
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[d1]"></a>CFG_Save</STRONG> (Thumb, 216 bytes, Stack size 24 bytes, system_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = CFG_Save &rArr; Flash_ByteProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ByteProgram
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
</UL>

<P><STRONG><a name="[76]"></a>CFG_Load</STRONG> (Thumb, 1216 bytes, Stack size 24 bytes, system_config.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = CFG_Load &rArr; CFG_Save &rArr; Flash_ByteProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[182]"></a>CFG_Check</STRONG> (Thumb, 1282 bytes, Stack size 24 bytes, system_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
</UL>

<P><STRONG><a name="[183]"></a>CFG_CheckSum</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, system_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>

<P><STRONG><a name="[184]"></a>CFG_Write</STRONG> (Thumb, 114 bytes, Stack size 48 bytes, system_config.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ByteProgram
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
<LI><a href="#[180]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>

<P><STRONG><a name="[185]"></a>gmtime_r</STRONG> (Thumb, 368 bytes, Stack size 40 bytes, m_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = gmtime_r &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromGps
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromSec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromGsm
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;localtime_r
</UL>

<P><STRONG><a name="[186]"></a>localtime_r</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, m_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmtime_r
</UL>

<P><STRONG><a name="[187]"></a>mktime</STRONG> (Thumb, 1144 bytes, Stack size 56 bytes, m_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromGps
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromGsm
</UL>

<P><STRONG><a name="[188]"></a>TIME_FromGsm</STRONG> (Thumb, 208 bytes, Stack size 64 bytes, sys_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = TIME_FromGsm &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmtime_r
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
</UL>

<P><STRONG><a name="[10a]"></a>TIME_FromGps</STRONG> (Thumb, 114 bytes, Stack size 64 bytes, sys_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = TIME_FromGps &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmtime_r
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[10b]"></a>TIME_GetSec</STRONG> (Thumb, 146 bytes, Stack size 56 bytes, sys_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = TIME_GetSec &rArr; mktime &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_AddSec
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParserCellLocate
</UL>

<P><STRONG><a name="[189]"></a>TIME_FromSec</STRONG> (Thumb, 84 bytes, Stack size 64 bytes, sys_time.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = TIME_FromSec &rArr; gmtime_r &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmtime_r
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRtcTime
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_AddSec
</UL>

<P><STRONG><a name="[18a]"></a>TIME_AddSec</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, sys_time.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromSec
</UL>

<P><STRONG><a name="[172]"></a>StrParserInit</STRONG> (Thumb, 42 bytes, Stack size 12 bytes, string_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = StrParserInit
</UL>
<BR>[Called By]<UL><LI><a href="#[171]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_CmdProcessInit
</UL>

<P><STRONG><a name="[18b]"></a>StrParserCtl</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, string_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = StrParserCtl
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[173]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrComnandParser
</UL>

<P><STRONG><a name="[173]"></a>StrComnandParser</STRONG> (Thumb, 226 bytes, Stack size 40 bytes, string_parser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = StrComnandParser &rArr; StrParserCtl
</UL>
<BR>[Calls]<UL><LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrParserCtl
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AT_ComnandParser
</UL>

<P><STRONG><a name="[18d]"></a>DbCalcCheckSum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DbCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Save
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataInfo
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Load
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntSave
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntLoad
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageSave
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageLoad
</UL>

<P><STRONG><a name="[18c]"></a>DB_U32Load</STRONG> (Thumb, 84 bytes, Stack size 32 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = DB_U32Load &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
</UL>

<P><STRONG><a name="[179]"></a>DB_ResetCntSave</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DB_ResetCntSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
</UL>

<P><STRONG><a name="[178]"></a>DB_ResetCntLoad</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DB_ResetCntLoad &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
</UL>

<P><STRONG><a name="[17a]"></a>DB_MileageLoad</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DB_MileageLoad &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
</UL>

<P><STRONG><a name="[18e]"></a>DB_LogRingSave</STRONG> (Thumb, 280 bytes, Stack size 24 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingReset
</UL>

<P><STRONG><a name="[177]"></a>DB_LogRingReset</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DB_LogRingReset &rArr; DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
</UL>

<P><STRONG><a name="[18f]"></a>DB_InitLog</STRONG> (Thumb, 332 bytes, Stack size 64 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = DB_InitLog &rArr; DB_LogRingReset &rArr; DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingReset
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
</UL>

<P><STRONG><a name="[7e]"></a>DB_FlashMemInit</STRONG> (Thumb, 646 bytes, Stack size 32 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = DB_FlashMemInit &rArr; DB_InitLog &rArr; DB_LogRingReset &rArr; DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Load
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntSave
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntLoad
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageLoad
<LI><a href="#[16d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[17b]"></a>DB_MileageSave</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = DB_MileageSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
</UL>

<P><STRONG><a name="[113]"></a>DB_FloatToU32</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DB_FloatToU32 &rArr; __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[255]"></a>DB_U32ToFloat</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, db.o(.text), UNUSED)

<P><STRONG><a name="[115]"></a>DB_U32Save</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = DB_U32Save &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
<LI><a href="#[191]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[192]"></a>DB_DataLogFill</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, db.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTrackerMsgFill
</UL>

<P><STRONG><a name="[193]"></a>DB_LoadDataInfo</STRONG> (Thumb, 290 bytes, Stack size 40 bytes, db.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[194]"></a>DB_LoadDataLogTail</STRONG> (Thumb, 192 bytes, Stack size 32 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = DB_LoadDataLogTail &rArr; DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[195]"></a>DB_SaveDataLog</STRONG> (Thumb, 412 bytes, Stack size 48 bytes, db.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = DB_SaveDataLog &rArr; DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[18d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbCalcCheckSum
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
</UL>

<P><STRONG><a name="[80]"></a>TrackerInit</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tracker.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5e]"></a>TrackerTask</STRONG> (Thumb, 1580 bytes, Stack size 32 bytes, tracker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 720<LI>Call Chain = TrackerTask &rArr; PedometerTask &rArr; ambo_step_detect &rArr; b2_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_EnableGps
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StartTask
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetPhase
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioStopCheck
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UpdateRtcTime
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Save
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FloatToU32
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTask
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromSec
<LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromGsm
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParserCellLocate
<LI><a href="#[17e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite8
<LI><a href="#[17f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[256]"></a>PrintTrackerInfo</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, tracker.o(.text), UNUSED)

<P><STRONG><a name="[197]"></a>CheckTrackerMsgFill</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, tracker.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_DataLogFill
</UL>

<P><STRONG><a name="[ba]"></a>CheckTrackerMsgIsReady</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, tracker.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[198]"></a>GetLastTrackerMsg</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, tracker.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
</UL>

<P><STRONG><a name="[bb]"></a>GetTrackerMsg</STRONG> (Thumb, 162 bytes, Stack size 16 bytes, tracker.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 432<LI>Call Chain = GetTrackerMsg &rArr; DGPS_Add &rArr; formatLatLng &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[105]"></a>DCFG_Add</STRONG> (Thumb, 130 bytes, Stack size 40 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = DCFG_Add &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
</UL>

<P><STRONG><a name="[19b]"></a>SCFG_Add</STRONG> (Thumb, 102 bytes, Stack size 40 bytes, gprs_cmd_ctrl.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
</UL>

<P><STRONG><a name="[106]"></a>DCFG_Parser</STRONG> (Thumb, 132 bytes, Stack size 64 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 328<LI>Call Chain = DCFG_Parser &rArr; __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
<LI><a href="#[cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
</UL>

<P><STRONG><a name="[be]"></a>IsGprsDataPacket</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = IsGprsDataPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
</UL>

<P><STRONG><a name="[c5]"></a>DPWF_Add</STRONG> (Thumb, 124 bytes, Stack size 184 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = DPWF_Add &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
</UL>

<P><STRONG><a name="[c4]"></a>DPWO_Add</STRONG> (Thumb, 124 bytes, Stack size 184 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = DPWO_Add &rArr; __2sprintf
</UL>
<BR>[Calls]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
</UL>
<BR>[Called By]<UL><LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
</UL>

<P><STRONG><a name="[19a]"></a>DCLI_Add</STRONG> (Thumb, 1148 bytes, Stack size 240 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = DCLI_Add &rArr; formatLatLng &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread8
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackerMsg
</UL>

<P><STRONG><a name="[199]"></a>DGPS_Add</STRONG> (Thumb, 1066 bytes, Stack size 240 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = DGPS_Add &rArr; formatLatLng &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread8
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackerMsg
<LI><a href="#[198]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetLastTrackerMsg
</UL>

<P><STRONG><a name="[d8]"></a>DSOS_Add</STRONG> (Thumb, 1356 bytes, Stack size 272 bytes, gprs_cmd_ctrl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 448<LI>Call Chain = DSOS_Add &rArr; formatLatLng &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[10d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmpeq
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
<LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromSec
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcat
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_Start
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
</UL>

<P><STRONG><a name="[47]"></a>GPRMC_Process</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, gps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[48]"></a>GPGGA_Process</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, gps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[49]"></a>GPGSA_Process</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, gps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[4a]"></a>GPGSV_Process</STRONG> (Thumb, 180 bytes, Stack size 0 bytes, gps.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> gps.o(.constdata)
</UL>
<P><STRONG><a name="[130]"></a>GPS_ComnandParser</STRONG> (Thumb, 348 bytes, Stack size 16 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPS_ComnandParser
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UART0_IRQHandler
</UL>

<P><STRONG><a name="[190]"></a>neamFormatLatLng</STRONG> (Thumb, 90 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = neamFormatLatLng &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
</UL>

<P><STRONG><a name="[110]"></a>formatLat</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = formatLat &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[114]"></a>formatLng</STRONG> (Thumb, 132 bytes, Stack size 48 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = formatLng &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[19e]"></a>formatLatLng</STRONG> (Thumb, 88 bytes, Stack size 40 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = formatLatLng &rArr; floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[1a7]"></a>GpsGetInfo</STRONG> (Thumb, 62 bytes, Stack size 24 bytes, gps.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[108]"></a>nmea_zero_INFO</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nmea_zero_INFO
</UL>
<BR>[Calls]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPSInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[78]"></a>GPSInit</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPSInit &rArr; nmea_zero_INFO
</UL>
<BR>[Calls]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_zero_INFO
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b7]"></a>nmea_GPGSV2info</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[1a9]"></a>nmea_atoi</STRONG> (Thumb, 50 bytes, Stack size 56 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = nmea_atoi &rArr; strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
</UL>

<P><STRONG><a name="[1ab]"></a>nmea_atof</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 272<LI>Call Chain = nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtod
</UL>
<BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
</UL>

<P><STRONG><a name="[169]"></a>nmea_scanf</STRONG> (Thumb, 606 bytes, Stack size 64 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 336<LI>Call Chain = nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_atof
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_atoi
<LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memchr
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPRMC
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGGA
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nmea_parse_time
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGSA
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGSV
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParserCellLocate
</UL>

<P><STRONG><a name="[1af]"></a>nmea_parse_GPGSV</STRONG> (Thumb, 152 bytes, Stack size 104 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 440<LI>Call Chain = nmea_parse_GPGSV &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[1b6]"></a>nmea_GPGSA2info</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, gps.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[1b0]"></a>nmea_parse_GPGSA</STRONG> (Thumb, 114 bytes, Stack size 80 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 416<LI>Call Chain = nmea_parse_GPGSA &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[1b5]"></a>nmea_GPGGA2info</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = nmea_GPGGA2info
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[1b1]"></a>_nmea_parse_time</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 368<LI>Call Chain = _nmea_parse_time &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
</UL>
<BR>[Called By]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPRMC
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGGA
</UL>

<P><STRONG><a name="[1b2]"></a>nmea_parse_GPGGA</STRONG> (Thumb, 130 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = nmea_parse_GPGGA &rArr; _nmea_parse_time &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nmea_parse_time
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[1b3]"></a>nmea_GPRMC2info</STRONG> (Thumb, 186 bytes, Stack size 24 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = nmea_GPRMC2info &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[10f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[1b4]"></a>nmea_parse_GPRMC</STRONG> (Thumb, 150 bytes, Stack size 88 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 456<LI>Call Chain = nmea_parse_GPRMC &rArr; _nmea_parse_time &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_nmea_parse_time
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
</UL>
<BR>[Called By]<UL><LI><a href="#[109]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPS_GetInfo
</UL>

<P><STRONG><a name="[109]"></a>GPS_GetInfo</STRONG> (Thumb, 446 bytes, Stack size 8 bytes, gps.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 464<LI>Call Chain = GPS_GetInfo &rArr; nmea_parse_GPRMC &rArr; _nmea_parse_time &rArr; nmea_scanf &rArr; nmea_atof &rArr; strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPRMC
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_GPRMC2info
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGGA
<LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_GPGGA2info
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGSA
<LI><a href="#[1b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_GPGSA2info
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGSV
<LI><a href="#[1b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_GPGSV2info
</UL>
<BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[257]"></a>nmea_calc_crc</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gps.o(.text), UNUSED)

<P><STRONG><a name="[81]"></a>LPTMR_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPTMR_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1b9]"></a>GsmLedControl</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GsmLedControl &rArr; GprsTask_GetPhase
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_GetPhase
</UL>
<BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedControl
</UL>

<P><STRONG><a name="[1bb]"></a>GpsLedControl</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, tick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedControl
</UL>

<P><STRONG><a name="[1ba]"></a>LedControl</STRONG> (Thumb, 226 bytes, Stack size 8 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LedControl &rArr; GsmLedControl &rArr; GprsTask_GetPhase
</UL>
<BR>[Calls]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsLedControl
<LI><a href="#[1b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmLedControl
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>

<P><STRONG><a name="[1bd]"></a>ClearLastKeyStatus</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, tick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTask_Control
</UL>

<P><STRONG><a name="[1bc]"></a>KeyTask_Control</STRONG> (Thumb, 584 bytes, Stack size 8 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = KeyTask_Control
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Keys_Init
<LI><a href="#[1bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ClearLastKeyStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>

<P><STRONG><a name="[1be]"></a>ChargerLedControl</STRONG> (Thumb, 148 bytes, Stack size 0 bytes, tick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>

<P><STRONG><a name="[11c]"></a>LPTimerTask</STRONG> (Thumb, 1130 bytes, Stack size 8 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = LPTimerTask &rArr; LedControl &rArr; GsmLedControl &rArr; GprsTask_GetPhase
</UL>
<BR>[Calls]<UL><LI><a href="#[ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayAlarmWarningSound
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_GetPhase
<LI><a href="#[1be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ChargerLedControl
<LI><a href="#[1bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;KeyTask_Control
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LedControl
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LLW_IRQHandler
<LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimer_IRQHandler
</UL>

<P><STRONG><a name="[22]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = LPTimer_IRQHandler &rArr; LPTimerTask &rArr; LedControl &rArr; GsmLedControl &rArr; GprsTask_GetPhase
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[116]"></a>UpdateRtcTime</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = UpdateRtcTime &rArr; TIME_FromSec &rArr; gmtime_r &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[189]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_FromSec
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[7a]"></a>TICK_Init</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TICK_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[258]"></a>TICK_DeInit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tick.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>GetKeyPressed</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, tick.o(.text), UNUSED)

<P><STRONG><a name="[25a]"></a>CheckKeyPressed</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tick.o(.text), UNUSED)

<P><STRONG><a name="[25b]"></a>GetKeyPressTime</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, tick.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, tick.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[f7]"></a>TICK_Get</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, tick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_ClearAllSms
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitTimeout
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[1cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Read2FlashMem
<LI><a href="#[1cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APP_Write2FlashMem
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TimerDelayms
<LI><a href="#[18b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;StrParserCtl
</UL>

<P><STRONG><a name="[25c]"></a>TICK_Get64</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tick.o(.text), UNUSED)

<P><STRONG><a name="[64]"></a>DelayMs</STRONG> (Thumb, 24 bytes, Stack size 4 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DelayMs
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSetup
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetIMEI
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSMS
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[5d]"></a>InitTimeout</STRONG> (Thumb, 22 bytes, Stack size 4 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = InitTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[104]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_WaitRetry
<LI><a href="#[102]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Retry
<LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetWait
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Pause
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_StartCall
<LI><a href="#[e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_EndCall
<LI><a href="#[e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_AnswerCall
<LI><a href="#[dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_SendSms
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_PromptForWaiting
<LI><a href="#[d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_InitPromptTimeOut
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Init
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_Cancel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmdTask_Retry
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsDataTask_Retry
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsGetInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[73]"></a>CheckTimeout</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = CheckTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
<LI><a href="#[1bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_Start
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Pause
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_PromptForWaiting
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfigTask_IsWaitingForRetryTimedOut
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_Cancel
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GprsTask_StopTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsGetInfo
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[1c0]"></a>TimerDelayms</STRONG> (Thumb, 50 bytes, Stack size 4 bytes, tick.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
</UL>

<P><STRONG><a name="[165]"></a>InitFindData</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = InitFindData
</UL>
<BR>[Calls]<UL><LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetWait
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[166]"></a>FindData</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, tick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckResponse
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[1c1]"></a>DbgCfgPrintf</STRONG> (Thumb, 78 bytes, Stack size 32 bytes, dbg_cfg_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
<LI><a href="#[164]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__c89vsprintf
</UL>

<P><STRONG><a name="[1c2]"></a>CfgParserPacket</STRONG> (Thumb, 170 bytes, Stack size 12 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = CfgParserPacket &rArr; __ARM_common_switch8
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHID_Task
</UL>

<P><STRONG><a name="[1c5]"></a>CfgCalcCheckSum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CfgCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
</UL>

<P><STRONG><a name="[1c3]"></a>CfgUSBSendData</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = CfgUSBSendData &rArr; RINGBUF_Put
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHID_Task
</UL>

<P><STRONG><a name="[1c4]"></a>CfgProcessData</STRONG> (Thumb, 1754 bytes, Stack size 48 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = CfgProcessData &rArr; DB_LogRingReset &rArr; DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgCalcCheckSum
<LI><a href="#[1c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
<LI><a href="#[179]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntSave
<LI><a href="#[178]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_ResetCntLoad
<LI><a href="#[17b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageSave
<LI><a href="#[17a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_MileageLoad
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingReset
<LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
<LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHID_Task
</UL>

<P><STRONG><a name="[1c7]"></a>vHID_Task</STRONG> (Thumb, 132 bytes, Stack size 88 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = vHID_Task &rArr; CfgProcessData &rArr; DB_LogRingReset &rArr; DB_LogRingSave &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[1c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgUSBSendData
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgParserPacket
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[1c8]"></a>FlashReadWriteCtrl</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FlashReadWriteCtrl &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[17]"></a>TPM0_IRQHandler</STRONG> (Thumb, 282 bytes, Stack size 8 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 728<LI>Call Chain = TPM0_IRQHandler &rArr; TrackerTask &rArr; PedometerTask &rArr; ambo_step_detect &rArr; b2_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIME_GetSec
<LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Task
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
<LI><a href="#[1c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashReadWriteCtrl
<LI><a href="#[1c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vHID_Task
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1cb]"></a>APP_Write2FlashMem</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, dbg_cfg_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
</UL>

<P><STRONG><a name="[1cc]"></a>APP_Read2FlashMem</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, dbg_cfg_app.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Get
</UL>

<P><STRONG><a name="[5c]"></a>TPM0_DeInit</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
</UL>

<P><STRONG><a name="[58]"></a>TPM0_Init</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TPM0_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Init
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
</UL>

<P><STRONG><a name="[1ce]"></a>disk_initialize</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disk_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MMC_disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[1d0]"></a>disk_status</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[1d2]"></a>disk_read</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, diskio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>

<P><STRONG><a name="[1d4]"></a>disk_write</STRONG> (Thumb, 36 bytes, Stack size 40 bytes, diskio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_disk_write
</UL>

<P><STRONG><a name="[1d6]"></a>disk_ioctl</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, diskio.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_disk_ioctl
</UL>

<P><STRONG><a name="[1db]"></a>clust2sect</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>

<P><STRONG><a name="[1d9]"></a>get_fat</STRONG> (Thumb, 230 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>

<P><STRONG><a name="[1ee]"></a>f_mount</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = f_mount
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AUDIO_Init
</UL>

<P><STRONG><a name="[1e7]"></a>f_open</STRONG> (Thumb, 140 bytes, Stack size 72 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 288<LI>Call Chain = f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[1e8]"></a>f_read</STRONG> (Thumb, 394 bytes, Stack size 64 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = f_read &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cpy
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[1ea]"></a>f_close</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = f_close &rArr; validate &rArr; disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[1eb]"></a>f_lseek</STRONG> (Thumb, 312 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = f_lseek &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;validate
<LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[1cf]"></a>MMC_disk_initialize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>

<P><STRONG><a name="[1d1]"></a>SST25_disk_status</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, flash_mem.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>

<P><STRONG><a name="[1d3]"></a>SST25_disk_read</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, flash_mem.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>

<P><STRONG><a name="[1d5]"></a>SST25_disk_write</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, flash_mem.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_write
</UL>

<P><STRONG><a name="[25d]"></a>get_fattime</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, flash_mem.o(.text), UNUSED)

<P><STRONG><a name="[1d7]"></a>SST25_disk_ioctl</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, flash_mem.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_ioctl
</UL>

<P><STRONG><a name="[1ef]"></a>DAC_Init</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
</UL>

<P><STRONG><a name="[1f3]"></a>DAC_DeInit</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[1ec]"></a>TPM1_Init</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TPM1_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[1f2]"></a>TPM1_DeInit</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[18]"></a>TPM1_IRQHandler</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TPM1_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>AUDIO_Init</STRONG> (Thumb, 104 bytes, Stack size 8 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = AUDIO_Init &rArr; disk_initialize
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Init
<LI><a href="#[1ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_mount
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>AudioEnable</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceSetup
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PORTD_IRQHandler
</UL>

<P><STRONG><a name="[59]"></a>AudioStopAll</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
</UL>

<P><STRONG><a name="[75]"></a>AudioStopCheck</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, audio.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
</UL>

<P><STRONG><a name="[25e]"></a>AudioTask_GetPhase</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, audio.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>AudioPlayFile</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 172<LI>Call Chain = AudioPlayFile &rArr; SetLowPowerModes &rArr; LowPowerModes &rArr; vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DelayMs
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioEnable
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVersion
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayBatteryStatus
<LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_End
<LI><a href="#[d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SosTask_PromptForWaiting
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysPwrOff
</UL>

<P><STRONG><a name="[ef]"></a>PlayVersion</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 196<LI>Call Chain = PlayVersion &rArr; AudioPlayFile &rArr; SetLowPowerModes &rArr; LowPowerModes &rArr; vlp_clock_config &rArr; PEE_to_BLPE &rArr; atc &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioPlayFile
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strlen
</UL>
<BR>[Called By]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Io_Task
</UL>

<P><STRONG><a name="[1f1]"></a>htons</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = htons
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWavInfo
</UL>

<P><STRONG><a name="[1f0]"></a>ReadWavInfo</STRONG> (Thumb, 210 bytes, Stack size 16 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = ReadWavInfo &rArr; htons
</UL>
<BR>[Calls]<UL><LI><a href="#[1f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;htons
</UL>
<BR>[Called By]<UL><LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
</UL>

<P><STRONG><a name="[1c9]"></a>AudioControler</STRONG> (Thumb, 1302 bytes, Stack size 16 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 304<LI>Call Chain = AudioControler &rArr; f_open &rArr; follow_path &rArr; dir_find &rArr; dir_next &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetLowPowerModes
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
<LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadWavInfo
<LI><a href="#[1f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM1_DeInit
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM1_Init
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_DeInit
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2sprintf
<LI><a href="#[d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strcpy
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[19]"></a>TPM2_IRQHandler</STRONG> (Thumb, 56 bytes, Stack size 0 bytes, dtmf_app.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1f8]"></a>ADC0_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, dtmf_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Init
</UL>

<P><STRONG><a name="[1f7]"></a>ADC0_DeInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dtmf_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_DeInit
</UL>

<P><STRONG><a name="[1f4]"></a>TPM2_Init</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, dtmf_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = TPM2_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Init
</UL>

<P><STRONG><a name="[1f6]"></a>TPM2_DeInit</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, dtmf_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_DeInit
</UL>

<P><STRONG><a name="[f2]"></a>DTMF_DeInit</STRONG> (Thumb, 18 bytes, Stack size 4 bytes, dtmf_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = DTMF_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM2_DeInit
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_DeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_DeInitDtmf
</UL>

<P><STRONG><a name="[f1]"></a>DTMF_Init</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, dtmf_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DTMF_Init &rArr; TPM2_Init &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Init
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM2_Init
<LI><a href="#[1f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_InitDtmf
</UL>

<P><STRONG><a name="[1ca]"></a>DTMF_Task</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, dtmf_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = DTMF_Task &rArr; DTMF_Detect &rArr; DTMF_digit &rArr; Goertzel
</UL>
<BR>[Calls]<UL><LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
<LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Detect
</UL>
<BR>[Called By]<UL><LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
</UL>

<P><STRONG><a name="[1f9]"></a>DTMF_Detect</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, dtmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 92<LI>Call Chain = DTMF_Detect &rArr; DTMF_digit &rArr; Goertzel
</UL>
<BR>[Calls]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_digit
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GainControl
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Task
</UL>

<P><STRONG><a name="[1fe]"></a>xl362Write</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, xl362_io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xl362Write &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362Init
</UL>

<P><STRONG><a name="[1ff]"></a>xl362Init</STRONG> (Thumb, 122 bytes, Stack size 24 bytes, xl362_io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = xl362Init &rArr; xl362Write &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362Write
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTaskInit
</UL>

<P><STRONG><a name="[200]"></a>xl362Read</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, xl362_io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xl362Read &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTask
</UL>

<P><STRONG><a name="[201]"></a>xl362FifoRead</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, xl362_io.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xl362FifoRead &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTask
</UL>

<P><STRONG><a name="[205]"></a>ambo_pedometer_init</STRONG> (Thumb, 122 bytes, Stack size 0 bytes, ambo_pedometer.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTaskInit
</UL>

<P><STRONG><a name="[206]"></a>ambo_pedometer_sample_update</STRONG> (Thumb, 68 bytes, Stack size 12 bytes, ambo_pedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ambo_pedometer_sample_update
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTask
</UL>

<P><STRONG><a name="[204]"></a>b2_filter</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, ambo_pedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = b2_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ambo_step_detect
</UL>

<P><STRONG><a name="[203]"></a>b_filter</STRONG> (Thumb, 154 bytes, Stack size 16 bytes, ambo_pedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = b_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ambo_step_detect
</UL>

<P><STRONG><a name="[202]"></a>ambo_step_detect</STRONG> (Thumb, 904 bytes, Stack size 12 bytes, ambo_pedometer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = ambo_step_detect &rArr; b2_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[203]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b_filter
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;b2_filter
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTask
</UL>

<P><STRONG><a name="[207]"></a>accelCheckManDown</STRONG> (Thumb, 158 bytes, Stack size 8 bytes, pedometer_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = accelCheckManDown
</UL>
<BR>[Called By]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PedometerTask
</UL>

<P><STRONG><a name="[79]"></a>PedometerTaskInit</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, pedometer_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = PedometerTaskInit &rArr; xl362Init &rArr; xl362Write &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
<LI><a href="#[1ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362Init
<LI><a href="#[205]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ambo_pedometer_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[196]"></a>PedometerTask</STRONG> (Thumb, 498 bytes, Stack size 656 bytes, pedometer_task.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 688<LI>Call Chain = PedometerTask &rArr; ambo_step_detect &rArr; b2_filter
</UL>
<BR>[Calls]<UL><LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362FifoRead
<LI><a href="#[200]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xl362Read
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;accelCheckManDown
<LI><a href="#[202]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ambo_step_detect
<LI><a href="#[206]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ambo_pedometer_sample_update
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
</UL>

<P><STRONG><a name="[25f]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[63]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_Init
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Init
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysSleep
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM2_Init
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM1_Init
<LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataInfo
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_DataLogFill
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmtime_r
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[260]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[72]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pbe_pee
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fbi
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_blpi
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_pbe
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fbi
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpi_fbi
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;blpe_pbe
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fei_fee
<LI><a href="#[123]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fee_fbi
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbi_fee
<LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fbe_fee
<LI><a href="#[11e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;new_pll_freq
<LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pll_init
<LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mktime
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;gmtime_r
</UL>

<P><STRONG><a name="[1ad]"></a>__rt_ctype_table</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, ctype_o.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
<LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isspace
</UL>

<P><STRONG><a name="[2c]"></a>isspace</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, isspace_o.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = isspace
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
</UL>
<BR>[Address Reference Count : 2]<UL><LI> scanf_char.o(.text)
<LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[bf]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetMessage
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UploadConfig_Task
<LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetTrackerMsg
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_IRQHandler
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_atof
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_atoi
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
<LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
</UL>

<P><STRONG><a name="[10f]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_GPRMC2info
<LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsGetInfo
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParserCellLocate
</UL>

<P><STRONG><a name="[261]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[17c]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[208]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[262]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[263]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[f6]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_ClearAllSms
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
</UL>

<P><STRONG><a name="[1a8]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_zero_INFO
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPRMC
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGGA
<LI><a href="#[1b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGSA
<LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGSV
</UL>

<P><STRONG><a name="[264]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[208]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[17c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[19c]"></a>strcat</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, strcat.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWO_Add
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWF_Add
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[176]"></a>strstr</STRONG> (Thumb, 40 bytes, Stack size 12 bytes, strstr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = strstr
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
</UL>

<P><STRONG><a name="[ce]"></a>strlen</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, strlen.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PlayVersion
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetMessage
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ComparePhoneNumber
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWO_Add
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWF_Add
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPRMC
<LI><a href="#[1b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_parse_GPGGA
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[165]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;InitFindData
</UL>

<P><STRONG><a name="[cf]"></a>strcmp</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, strcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = strcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFG_Parser
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
</UL>

<P><STRONG><a name="[1ae]"></a>memchr</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, memchr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[169]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_scanf
</UL>

<P><STRONG><a name="[191]"></a>memcmp</STRONG> (Thumb, 26 bytes, Stack size 12 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_U32Save
</UL>

<P><STRONG><a name="[d0]"></a>strcpy</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, strcpy.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SetWait
<LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_StartCall
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_AddPhoneNo
<LI><a href="#[ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_AddAllContactPhoneNo
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Check
</UL>

<P><STRONG><a name="[181]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[193]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataInfo
<LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_DataLogFill
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[183]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_CheckSum
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Check
</UL>

<P><STRONG><a name="[265]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[266]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[19d]"></a>__aeabi_uread8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, uread8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_uread8
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[267]"></a>__rt_uread8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uread8.o(.text), UNUSED)

<P><STRONG><a name="[268]"></a>_uread8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, uread8.o(.text), UNUSED)

<P><STRONG><a name="[17f]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[195]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_SaveDataLog
<LI><a href="#[194]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LoadDataLogTail
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_InitLog
<LI><a href="#[18e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingSave
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Check
<LI><a href="#[177]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_LogRingReset
</UL>

<P><STRONG><a name="[269]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[26a]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[17e]"></a>__aeabi_uwrite8</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, uwrite8.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_uwrite8
</UL>
<BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Load
<LI><a href="#[182]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Check
</UL>

<P><STRONG><a name="[26b]"></a>__rt_uwrite8</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uwrite8.o(.text), UNUSED)

<P><STRONG><a name="[26c]"></a>_uwrite8</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, uwrite8.o(.text), UNUSED)

<P><STRONG><a name="[16b]"></a>__0sscanf</STRONG> (Thumb, 50 bytes, Stack size 72 bytes, __0sscanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 264<LI>Call Chain = __0sscanf &rArr; __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>
<BR>[Called By]<UL><LI><a href="#[106]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFG_Parser
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
</UL>

<P><STRONG><a name="[20a]"></a>_scanf_int</STRONG> (Thumb, 330 bytes, Stack size 48 bytes, _scanf_int.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_int
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[226]"></a>_scanf_string</STRONG> (Thumb, 228 bytes, Stack size 48 bytes, _scanf_str.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = _scanf_string
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>

<P><STRONG><a name="[220]"></a>_scanf_real</STRONG> (Thumb, 0 bytes, Stack size 104 bytes, scanf_fp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = _scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>

<P><STRONG><a name="[20f]"></a>_scanf_really_real</STRONG> (Thumb, 586 bytes, Stack size 104 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_is_digit
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[1aa]"></a>strtol</STRONG> (Thumb, 108 bytes, Stack size 32 bytes, strtol.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = strtol &rArr; _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[1ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ctype_table
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_atoi
</UL>

<P><STRONG><a name="[213]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[1a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
</UL>

<P><STRONG><a name="[216]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[1a3]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_frsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[128]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[127]"></a>__aeabi_fdiv</STRONG> (Thumb, 124 bytes, Stack size 16 bytes, fdiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fdiv
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[1a4]"></a>__aeabi_dadd</STRONG> (Thumb, 326 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[218]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLng
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLat
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[21b]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[1a1]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLng
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLat
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[1a2]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLng
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLat
<LI><a href="#[1b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_GPRMC2info
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[1a5]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLng
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLat
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
<LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[126]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
</UL>

<P><STRONG><a name="[16c]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[214]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[1a0]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
</UL>

<P><STRONG><a name="[129]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;atc
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[19f]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[190]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;neamFormatLatLng
</UL>

<P><STRONG><a name="[112]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
</UL>

<P><STRONG><a name="[10c]"></a>__aeabi_cdcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
</UL>

<P><STRONG><a name="[10d]"></a>__aeabi_cdcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParserCellLocate
</UL>

<P><STRONG><a name="[10e]"></a>__aeabi_cdrcmple</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, cdrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[168]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ParserCellLocate
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;floor
</UL>

<P><STRONG><a name="[111]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[215]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TrackerTask
<LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FloatToU32
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[16e]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
</UL>

<P><STRONG><a name="[16d]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_GetCSQ
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DB_FlashMemInit
</UL>

<P><STRONG><a name="[17d]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
</UL>

<P><STRONG><a name="[21d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[20d]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[26d]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[217]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[26e]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[21c]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>

<P><STRONG><a name="[26f]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[218]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[270]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[20b]"></a>_chval</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, _chval.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[209]"></a>__vfscanf_char</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, scanf_char.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = __vfscanf_char &rArr; __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[16b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sscanf
</UL>

<P><STRONG><a name="[29]"></a>_sgetc</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> __0sscanf.o(.text)
<LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[2a]"></a>_sbackspace</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, _sgetc.o(.text))
<BR>[Address Reference Count : 2]<UL><LI> __0sscanf.o(.text)
<LI> strtod.o(.text)
</UL>
<P><STRONG><a name="[211]"></a>_strtoul</STRONG> (Thumb, 166 bytes, Stack size 40 bytes, _strtoul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = _strtoul
</UL>
<BR>[Calls]<UL><LI><a href="#[20b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_chval
<LI><a href="#[212]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_errno_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
</UL>

<P><STRONG><a name="[221]"></a>__strtod_int</STRONG> (Thumb, 92 bytes, Stack size 40 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_local_sscanf
</UL>
<BR>[Called By]<UL><LI><a href="#[1ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtod
</UL>

<P><STRONG><a name="[271]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[215]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fdiv
<LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[214]"></a>_float_epilogue</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[16c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[21a]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[219]"></a>_double_epilogue</STRONG> (Thumb, 166 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[21a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
</UL>

<P><STRONG><a name="[20e]"></a>__aeabi_ul2d</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, dfltul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[20c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_value
</UL>

<P><STRONG><a name="[223]"></a>__aeabi_d2ulz</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, dfixul.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[21c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[217]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
</UL>

<P><STRONG><a name="[4c]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[272]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[21e]"></a>__vfscanf</STRONG> (Thumb, 806 bytes, Stack size 80 bytes, _scanf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = __vfscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
<LI><a href="#[226]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_string
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_int
<LI><a href="#[225]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_longlong (Weak Reference)
</UL>
<BR>[Called By]<UL><LI><a href="#[209]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf_char
</UL>

<P><STRONG><a name="[273]"></a>__decompress</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[274]"></a>__decompress0</STRONG> (Thumb, 58 bytes, Stack size unknown bytes, __dczerorl.o(.text), UNUSED)

<P><STRONG><a name="[140]"></a>USB_ReqGetDescriptor</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, usbcore.o(i.USB_ReqGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ReqGetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[13e]"></a>USB_ReqGetStatus</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, usbcore.o(i.USB_ReqGetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[13f]"></a>USB_ReqSetClrFeature</STRONG> (Thumb, 216 bytes, Stack size 16 bytes, usbcore.o(i.USB_ReqSetClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_ReqSetClrFeature &rArr; USB_ClrStallEP
</UL>
<BR>[Calls]<UL><LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WakeUpCfg
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[142]"></a>USB_ReqSetConfiguration</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, usbcore.o(i.USB_ReqSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_ReqSetConfiguration &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[229]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[144]"></a>USB_ReqSetInterface</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, usbcore.o(i.USB_ReqSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_ReqSetInterface &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[150]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[228]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[14f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[22b]"></a>__0sprintf$8</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[275]"></a>__1sprintf$8</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8), UNUSED)

<P><STRONG><a name="[eb]"></a>__2sprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf8.o(i.__0sprintf$8))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2sprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[105]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCFG_Add
<LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetSosAddressMessage
<LI><a href="#[f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetSosGGLinkMessage
<LI><a href="#[d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DSOS_Add
<LI><a href="#[bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CheckGPRSDataOut
<LI><a href="#[bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_CmdRecvData
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWO_Add
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DPWF_Add
<LI><a href="#[c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CMD_CfgParse
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SMS_Manage
<LI><a href="#[1c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AudioControler
<LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCFG_Add
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DGPS_Add
<LI><a href="#[19a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DCLI_Add
<LI><a href="#[16f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendSMS
<LI><a href="#[167]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_CloseSocket
</UL>

<P><STRONG><a name="[22d]"></a>__0vsprintf</STRONG> (Thumb, 30 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sputc
<LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[276]"></a>__1vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[277]"></a>__2vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[164]"></a>__c89vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __c89vsprintf
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmdTask_SendCmd
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MODEM_SendCommand
<LI><a href="#[1c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DbgCfgPrintf
</UL>

<P><STRONG><a name="[278]"></a>vsprintf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printfa.o(i.__0vsprintf), UNUSED)

<P><STRONG><a name="[222]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[92]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, power_management.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SmsTask_SetSosAddressMessage
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCallTask_ClearEndCallStatus
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendPowerCmd_GprsTask
<LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SendGpsData_GprsTask
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LowPowerModes
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vlp_clock_config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VoiceCall_Task
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sos_Task
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Sms_Task
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModemCmd_Task
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gsm_Task
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Gprs_Task
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;cpu_identify
<LI><a href="#[107]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GpsTask_Control
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
<LI><a href="#[1c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgParserPacket
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPRS_SocketControl
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GsmGetTime
</UL>

<P><STRONG><a name="[212]"></a>__aeabi_errno_addr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr))
<BR><BR>[Called By]<UL><LI><a href="#[1aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;strtol
<LI><a href="#[211]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_strtoul
</UL>

<P><STRONG><a name="[279]"></a>__rt_errno_addr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, errno.o(i.__aeabi_errno_addr), UNUSED)

<P><STRONG><a name="[27a]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[27b]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[27c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[210]"></a>_is_digit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, scanf_fp.o(i._is_digit), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[1a6]"></a>floor</STRONG> (Thumb, 182 bytes, Stack size 24 bytes, floor.o(i.floor))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = floor &rArr; __aeabi_drsub &rArr; __aeabi_dadd &rArr; _double_epilogue &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLng
<LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLat
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;formatLatLng
</UL>

<P><STRONG><a name="[1ac]"></a>strtod</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, strtod.o(i.strtod))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = strtod &rArr; __strtod_int &rArr; _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>
<BR>[Called By]<UL><LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;nmea_atof
</UL>

<P><STRONG><a name="[134]"></a>SpSub</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash_ramfunc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ByteProgram (via Veneer)
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[50]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, project_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_InterruptInit
</UL>

<P><STRONG><a name="[51]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, project_main.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PIN_InterruptInit
</UL>

<P><STRONG><a name="[4d]"></a>NVIC_SystemReset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, project_main.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;AppRun
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[12d]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, uart.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[12c]"></a>NVIC_EnableIRQ</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[12a]"></a>NVIC_DisableIRQ</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, uart.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart_init
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uart0_init
</UL>

<P><STRONG><a name="[14e]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[14d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IntrEna
</UL>

<P><STRONG><a name="[15b]"></a>SST25__Status</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[161]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[162]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__GlobalProtect
<LI><a href="#[15d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
</UL>

<P><STRONG><a name="[15d]"></a>SST25__WriteEnable</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[15f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[15e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
</UL>

<P><STRONG><a name="[162]"></a>SST25__GlobalProtect</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, sst25.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[15b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
<LI><a href="#[15c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>

<P><STRONG><a name="[180]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, system_config.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Save
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CFG_Write
</UL>

<P><STRONG><a name="[1b8]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, tick.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TICK_Init
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_init
</UL>

<P><STRONG><a name="[1bf]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, tick.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CheckTimeout
<LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>

<P><STRONG><a name="[1cd]"></a>NVIC_SetPriority</STRONG> (Thumb, 248 bytes, Stack size 8 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM0_Init
</UL>

<P><STRONG><a name="[1c6]"></a>NVIC_SystemReset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, dbg_cfg_app.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgProcessData
</UL>

<P><STRONG><a name="[1e9]"></a>mem_cpy</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mem_cpy
</UL>
<BR>[Called By]<UL><LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[1e0]"></a>mem_set</STRONG> (Thumb, 20 bytes, Stack size 12 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[1de]"></a>mem_cmp</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[1e1]"></a>chk_chr</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, ff.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
</UL>

<P><STRONG><a name="[1d8]"></a>move_window</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[1da]"></a>dir_sdi</STRONG> (Thumb, 154 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = dir_sdi &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[1dc]"></a>dir_next</STRONG> (Thumb, 138 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = dir_next &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_fat
<LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clust2sect
</UL>
<BR>[Called By]<UL><LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
</UL>

<P><STRONG><a name="[1e3]"></a>ld_clust</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ld_clust
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[1dd]"></a>dir_find</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = dir_find &rArr; dir_next &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_next
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;move_window
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_cmp
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[1df]"></a>create_name</STRONG> (Thumb, 270 bytes, Stack size 40 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = create_name &rArr; mem_set
</UL>
<BR>[Calls]<UL><LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_chr
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mem_set
</UL>
<BR>[Called By]<UL><LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;follow_path
</UL>

<P><STRONG><a name="[1e2]"></a>follow_path</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = follow_path &rArr; dir_find &rArr; dir_next &rArr; get_fat &rArr; move_window &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;create_name
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_find
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ld_clust
<LI><a href="#[1da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dir_sdi
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[1e4]"></a>check_fs</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = check_fs &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_read
</UL>
<BR>[Called By]<UL><LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_mounted
</UL>

<P><STRONG><a name="[1e5]"></a>chk_mounted</STRONG> (Thumb, 758 bytes, Stack size 80 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = chk_mounted &rArr; check_fs &rArr; disk_read &rArr; SST25_disk_read &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;check_fs
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_initialize
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_open
</UL>

<P><STRONG><a name="[1e6]"></a>validate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, ff.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = validate &rArr; disk_status
</UL>
<BR>[Calls]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;disk_status
</UL>
<BR>[Called By]<UL><LI><a href="#[1eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_lseek
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_close
<LI><a href="#[1e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;f_read
</UL>

<P><STRONG><a name="[1ed]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, audio.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM1_Init
</UL>

<P><STRONG><a name="[1f5]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, dtmf_app.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TPM2_Init
</UL>

<P><STRONG><a name="[1fb]"></a>Goertzel</STRONG> (Thumb, 92 bytes, Stack size 36 bytes, dtmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Goertzel
</UL>
<BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_digit
</UL>

<P><STRONG><a name="[1fd]"></a>GainControl</STRONG> (Thumb, 152 bytes, Stack size 24 bytes, dtmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = GainControl
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Detect
</UL>

<P><STRONG><a name="[1fc]"></a>chk_valid</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, dtmf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_digit
</UL>

<P><STRONG><a name="[1fa]"></a>DTMF_digit</STRONG> (Thumb, 472 bytes, Stack size 40 bytes, dtmf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = DTMF_digit &rArr; Goertzel
</UL>
<BR>[Calls]<UL><LI><a href="#[1fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;chk_valid
<LI><a href="#[1fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Goertzel
</UL>
<BR>[Called By]<UL><LI><a href="#[1f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DTMF_Detect
</UL>

<P><STRONG><a name="[22c]"></a>_printf_core</STRONG> (Thumb, 1072 bytes, Stack size 104 bytes, printf8.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[231]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>

<P><STRONG><a name="[231]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printf8.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[230]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printf8.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2d]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printf8.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[22b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0sprintf$8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf8.o(i.__0sprintf$8)
</UL>
<P><STRONG><a name="[22f]"></a>_fp_digits</STRONG> (Thumb, 314 bytes, Stack size 56 bytes, printfa.o(i._fp_digits), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[10e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdrcmple
<LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2ulz
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[22e]"></a>_printf_core</STRONG> (Thumb, 1766 bytes, Stack size 128 bytes, printfa.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_pre_padding
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_post_padding
<LI><a href="#[22f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_digits
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>

<P><STRONG><a name="[233]"></a>_printf_post_padding</STRONG> (Thumb, 32 bytes, Stack size 24 bytes, printfa.o(i._printf_post_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[232]"></a>_printf_pre_padding</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, printfa.o(i._printf_pre_padding), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[22e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[2e]"></a>_sputc</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, printfa.o(i._sputc))
<BR><BR>[Called By]<UL><LI><a href="#[22d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0vsprintf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printfa.o(i.__0vsprintf)
</UL>
<P><STRONG><a name="[20c]"></a>_fp_value</STRONG> (Thumb, 246 bytes, Stack size 56 bytes, scanf_fp.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[1a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[20e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ul2d
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
</UL>
<BR>[Called By]<UL><LI><a href="#[20f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_really_real
</UL>

<P><STRONG><a name="[2b]"></a>_scanf_char_input</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, scanf_char.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> scanf_char.o(.text)
</UL>
<P><STRONG><a name="[21f]"></a>_local_sscanf</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, strtod.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = _local_sscanf &rArr; _scanf_real
</UL>
<BR>[Calls]<UL><LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_scanf_real
</UL>
<BR>[Called By]<UL><LI><a href="#[221]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__strtod_int
</UL>
<P>
<H3>
Undefined Global Symbols
</H3>
<P><STRONG><a name="[225]"></a>_scanf_longlong</STRONG> (ARM, 0 bytes, Stack size 0 bytes, UNDEFINED)
<BR><BR>[Called By]<UL><LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__vfscanf
</UL>
<HR></body></html>
