<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\GT1022_BOOT.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\GT1022_BOOT.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5.03 [Build 76]: Last Updated: Sun Jul 13 23:26:10 2014
<BR><P>
<H3>Maximum Stack Usage =        128 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
USB_EndPoint2 &rArr; MSC_BulkOut &rArr; MSC_MemoryWrite &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1]">NMI_Handler</a><BR>
 <LI><a href="#[3]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[3]">SVC_Handler</a><BR>
 <LI><a href="#[4]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4]">PendSV_Handler</a><BR>
 <LI><a href="#[5]">SysTick_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">SysTick_Handler</a><BR>
 <LI><a href="#[15]">ADC0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[15]">ADC0_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[15]">ADC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[16]">CMP0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1f]">DAC0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[6]">DMA0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[7]">DMA1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[8]">DMA2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[9]">DMA3_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[b]">FTFA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from project_bootloader.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[e]">I2C0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[f]">I2C1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[d]">LLW_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[22]">LPTimer_IRQHandler</a> from project_bootloader.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[c]">LVD_LVW_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[21]">MCG_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1c]">PIT_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[24]">PORTA_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[25]">PORTD_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1a]">RTC_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1b]">RTC_Seconds_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[a]">Reserved20_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1d]">Reserved39_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[23]">Reserved45_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[10]">SPI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[11]">SPI1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[27]">SystemInit</a> from system_mkl25z4.o(.text) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[17]">TPM0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[18]">TPM1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[19]">TPM2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[20]">TSI0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[12]">UART0_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[13]">UART1_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[14]">UART2_IRQHandler</a> from startup_mkl25z4.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[1e]">USB0_IRQHandler</a> from usbhw.o(.text) referenced from startup_mkl25z4.o(RESET)
 <LI><a href="#[29]">USB_EndPoint0</a> from usbcore.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[2a]">USB_EndPoint1</a> from usbuser.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[2b]">USB_EndPoint2</a> from usbuser.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[2c]">USB_EndPoint3</a> from usbuser.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[2d]">USB_EndPoint4</a> from usbuser.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[2e]">USB_EndPoint5</a> from usbuser.o(.text) referenced from usbuser.o(.constdata)
 <LI><a href="#[28]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_mkl25z4.o(.text)
 <LI><a href="#[26]">main</a> from project_bootloader.o(.text) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[28]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[a5]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[2f]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a0]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[a6]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[a7]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[a8]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[a9]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[aa]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[31]"></a>myFMC_Erase</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, flashprog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = myFMC_Erase &rArr; Flash_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[34]"></a>FMC_ProgramPage</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, flashprog.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = FMC_ProgramPage &rArr; Flash_ByteProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ByteProgram
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, project_bootloader.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>SetOutReport</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, project_bootloader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint3
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetReport
</UL>

<P><STRONG><a name="[4f]"></a>GetInReport</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, project_bootloader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint3
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure_Event
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetReport
</UL>

<P><STRONG><a name="[46]"></a>CfgCalcCheckSum</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CfgCalcCheckSum
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[37]"></a>execute_user_code</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = execute_user_code
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ab]"></a>load_boot_code</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, project_bootloader.o(.text), UNUSED)

<P><STRONG><a name="[39]"></a>LPTMR_init</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LPTMR_init &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
</UL>

<P><STRONG><a name="[3b]"></a>LPTimerTask</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LPTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SystemReset
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimer_IRQHandler
</UL>

<P><STRONG><a name="[22]"></a>LPTimer_IRQHandler</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = LPTimer_IRQHandler &rArr; LPTimerTask
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>SysInit</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = SysInit &rArr; sysinit &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Connect
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Init
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_init
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[ac]"></a>Delay</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, project_bootloader.o(.text), UNUSED)

<P><STRONG><a name="[26]"></a>main</STRONG> (Thumb, 846 bytes, Stack size 16 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = main &rArr; FMC_ProgramPage &rArr; Flash_ByteProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Serial2Usb
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_CheckSerialState
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Init
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_Init
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_user_code
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CfgCalcCheckSum
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramPage
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myFMC_Erase
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[27]"></a>SystemInit</STRONG> (Thumb, 170 bytes, Stack size 0 bytes, system_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(.text)
</UL>
<P><STRONG><a name="[48]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, system_mkl25z4.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>

<P><STRONG><a name="[4b]"></a>clk_out_init</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, sysinit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[3d]"></a>sysinit</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, sysinit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = sysinit &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clk_out_init
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
</UL>

<P><STRONG><a name="[ad]"></a>enable_abort_button</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, sysinit.o(.text), UNUSED)

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>ADC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>CMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>DAC0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>DMA0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>DMA1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>DMA2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>DMA3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[ae]"></a>DefaultISR</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>FTFA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>LLW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>LVD_LVW_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>MCG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>PIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>PORTA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[25]"></a>PORTD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>RTC_Seconds_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>Reserved20_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>Reserved39_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>Reserved45_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TPM0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TPM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TPM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>TSI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_mkl25z4.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[99]"></a>SPI_Init</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, spi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Init
</UL>

<P><STRONG><a name="[9b]"></a>halSpiWriteByte</STRONG> (Thumb, 66 bytes, Stack size 8 bytes, spi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__GlobalProtect
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
</UL>

<P><STRONG><a name="[40]"></a>RINGBUF_Init</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, ringbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[95]"></a>RINGBUF_Put</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, ringbuf.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = RINGBUF_Put
</UL>
<BR>[Called By]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
</UL>

<P><STRONG><a name="[43]"></a>RINGBUF_Get</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, ringbuf.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[af]"></a>RINGBUF_GetFill</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, ringbuf.o(.text), UNUSED)

<P><STRONG><a name="[41]"></a>Flash_Init</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, flash_ftfa.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[32]"></a>Flash_SectorErase</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, flash_ftfa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Flash_SectorErase
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpSub (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myFMC_Erase
</UL>

<P><STRONG><a name="[35]"></a>Flash_ByteProgram</STRONG> (Thumb, 190 bytes, Stack size 32 bytes, flash_ftfa.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Flash_ByteProgram
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SpSub (via Veneer)
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramPage
</UL>

<P><STRONG><a name="[4e]"></a>HID_GetReport</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hiduser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HID_GetReport
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[50]"></a>HID_SetReport</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hiduser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HID_SetReport
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutReport
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[5f]"></a>HID_GetIdle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[60]"></a>HID_SetIdle</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[61]"></a>HID_GetProtocol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[62]"></a>HID_SetProtocol</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hiduser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[79]"></a>USB_ResetCore</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, usbcore.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Suspend_Event
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
</UL>

<P><STRONG><a name="[52]"></a>USB_SetupStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_SetupStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[53]"></a>USB_DataInStage</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_DataInStage &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[54]"></a>USB_DataOutStage</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_DataOutStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[55]"></a>USB_StatusInStage</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = USB_StatusInStage &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[56]"></a>USB_StatusOutStage</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB_StatusOutStage &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[29]"></a>USB_EndPoint0</STRONG> (Thumb, 1206 bytes, Stack size 8 bytes, usbcore.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = USB_EndPoint0 &rArr; USB_ReqSetInterface &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetAddress
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DirCtrlEP
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure_Event
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_Reset
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetMaxLUN
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetLineCoding
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetControlLineState
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetCommFeature
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SendEncapsulatedCommand
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SendBreak
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetLineCoding
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetEncapsulatedResponse
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetCommFeature
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_ClearCommFeature
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetStatus
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqGetDescriptor
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetProtocol
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetProtocol
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetIdle
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetIdle
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_SetReport
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HID_GetReport
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[70]"></a>USB_IntrEna</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_IntrEna &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Init
</UL>

<P><STRONG><a name="[3f]"></a>USB_Init</STRONG> (Thumb, 168 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_Init &rArr; USB_IntrEna &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IntrEna
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
</UL>

<P><STRONG><a name="[38]"></a>USB_Connect</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;execute_user_code
</UL>

<P><STRONG><a name="[74]"></a>USB_Reset</STRONG> (Thumb, 94 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[76]"></a>USB_Suspend</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>USB_Resume</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[b0]"></a>USB_WakeUp</STRONG> (Thumb, 58 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[a1]"></a>USB_WakeUpCfg</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[6e]"></a>USB_SetAddress</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[a3]"></a>USB_Configure</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[73]"></a>USB_ResetEP</STRONG> (Thumb, 140 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[72]"></a>USB_ConfigEP</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
</UL>
<BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[57]"></a>USB_DirCtrlEP</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[a4]"></a>USB_EnableEP</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[a2]"></a>USB_DisableEP</STRONG> (Thumb, 54 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetInterface
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetConfiguration
</UL>

<P><STRONG><a name="[5b]"></a>USB_SetStallEP</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, usbhw.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_TestUnitReady
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_RWSetup
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryVerify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryWrite
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkIn
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6f]"></a>USB_ClrStallEP</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ClrStallEP
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[b1]"></a>USB_ClearEPBuf</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[45]"></a>USB_ReadEP</STRONG> (Thumb, 260 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusOutStage
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataOutStage
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetupStage
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[47]"></a>USB_WriteEP</STRONG> (Thumb, 94 bytes, Stack size 20 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryRead
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_StatusInStage
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DataInStage
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Serial2Usb
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[b2]"></a>USB_GetFrame</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, usbhw.o(.text), UNUSED)

<P><STRONG><a name="[1e]"></a>USB0_IRQHandler</STRONG> (Thumb, 350 bytes, Stack size 24 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = USB0_IRQHandler &rArr; USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Resume_Event
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset_Event
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Resume
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Suspend
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Reset
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_mkl25z4.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>USB_Reset_Event</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Reset_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetCore
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[7a]"></a>USB_Suspend_Event</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, usbuser.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetCore
</UL>

<P><STRONG><a name="[78]"></a>USB_Resume_Event</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, usbuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB0_IRQHandler
</UL>

<P><STRONG><a name="[5d]"></a>USB_Configure_Event</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_Configure_Event
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[2c]"></a>USB_EndPoint3</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_EndPoint3
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GetInReport
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetOutReport
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[2b]"></a>USB_EndPoint2</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_EndPoint2 &rArr; MSC_BulkOut &rArr; MSC_MemoryWrite &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[2a]"></a>USB_EndPoint1</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = USB_EndPoint1 &rArr; CDC_NotificationIn &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[2d]"></a>USB_EndPoint4</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = USB_EndPoint4 &rArr; MSC_BulkOut &rArr; MSC_MemoryWrite &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[2e]"></a>USB_EndPoint5</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, usbuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = USB_EndPoint5 &rArr; CDC_BulkOut &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkOut
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_BulkIn
</UL>
<BR>[Address Reference Count : 1]<UL><LI> usbuser.o(.constdata)
</UL>
<P><STRONG><a name="[63]"></a>MSC_Reset</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mscuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[64]"></a>MSC_GetMaxLUN</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, mscuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[81]"></a>MSC_MemoryRead</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = MSC_MemoryRead &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkIn
</UL>

<P><STRONG><a name="[85]"></a>MSC_SetCSW</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_TestUnitReady
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_RWSetup
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryVerify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryWrite
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkIn
</UL>

<P><STRONG><a name="[86]"></a>MSC_MemoryWrite</STRONG> (Thumb, 580 bytes, Stack size 24 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = MSC_MemoryWrite &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
<LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
</UL>

<P><STRONG><a name="[88]"></a>MSC_MemoryVerify</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MSC_MemoryVerify &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
</UL>

<P><STRONG><a name="[89]"></a>MSC_RWSetup</STRONG> (Thumb, 192 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MSC_RWSetup &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[8a]"></a>DataInFormat</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = DataInFormat &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ReadFormatCapacity
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ReadCapacity
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ModeSense10
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ModeSense6
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_Inquiry
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_RequestSense
</UL>

<P><STRONG><a name="[8b]"></a>DataInTransfer</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = DataInTransfer &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ReadFormatCapacity
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ReadCapacity
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ModeSense10
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ModeSense6
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_Inquiry
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_RequestSense
</UL>

<P><STRONG><a name="[8c]"></a>MSC_TestUnitReady</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = MSC_TestUnitReady &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[8d]"></a>MSC_RequestSense</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MSC_RequestSense &rArr; DataInFormat &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[8e]"></a>MSC_Inquiry</STRONG> (Thumb, 164 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MSC_Inquiry &rArr; DataInFormat &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[8f]"></a>MSC_ModeSense6</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MSC_ModeSense6 &rArr; DataInFormat &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[90]"></a>MSC_ModeSense10</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MSC_ModeSense10 &rArr; DataInFormat &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[91]"></a>MSC_ReadCapacity</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MSC_ReadCapacity &rArr; DataInFormat &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[92]"></a>MSC_ReadFormatCapacity</STRONG> (Thumb, 94 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = MSC_ReadFormatCapacity &rArr; DataInFormat &rArr; MSC_SetCSW &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
</UL>
<BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
</UL>

<P><STRONG><a name="[93]"></a>MSC_GetCBW</STRONG> (Thumb, 462 bytes, Stack size 16 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = MSC_GetCBW &rArr; MSC_MemoryRead &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ReadFormatCapacity
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ReadCapacity
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ModeSense10
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_ModeSense6
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_Inquiry
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_RequestSense
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_TestUnitReady
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_RWSetup
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryRead
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_BulkOut
</UL>

<P><STRONG><a name="[7c]"></a>MSC_BulkIn</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MSC_BulkIn &rArr; MSC_MemoryRead &rArr; SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryRead
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint4
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint2
</UL>

<P><STRONG><a name="[7b]"></a>MSC_BulkOut</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, mscuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MSC_BulkOut &rArr; MSC_MemoryWrite &rArr; SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryVerify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryWrite
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint4
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint2
</UL>

<P><STRONG><a name="[98]"></a>CDC_RdOutBuf</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, cdcuser.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
</UL>

<P><STRONG><a name="[b3]"></a>CDC_WrOutBuf</STRONG> (Thumb, 44 bytes, Stack size 20 bytes, cdcuser.o(.text), UNUSED)

<P><STRONG><a name="[97]"></a>CDC_OutBufAvailChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, cdcuser.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_Usb2Serial
</UL>

<P><STRONG><a name="[7d]"></a>CDC_GetSerialState</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_Init
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_CheckSerialState
</UL>

<P><STRONG><a name="[94]"></a>CDC_Init</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, cdcuser.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>

<P><STRONG><a name="[6b]"></a>CDC_SendEncapsulatedCommand</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[65]"></a>CDC_GetEncapsulatedResponse</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6c]"></a>CDC_SetCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[66]"></a>CDC_GetCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[67]"></a>CDC_ClearCommFeature</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6d]"></a>CDC_SetLineCoding</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CDC_SetLineCoding
</UL>
<BR>[Calls]<UL><LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[68]"></a>CDC_GetLineCoding</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CDC_GetLineCoding
</UL>
<BR>[Calls]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[69]"></a>CDC_SetControlLineState</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[6a]"></a>CDC_SendBreak</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, cdcuser.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[80]"></a>CDC_BulkIn</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = CDC_BulkIn &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Get
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint5
</UL>

<P><STRONG><a name="[7f]"></a>CDC_BulkOut</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = CDC_BulkOut &rArr; USB_ReadEP
</UL>
<BR>[Calls]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RINGBUF_Put
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReadEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint5
</UL>

<P><STRONG><a name="[7e]"></a>CDC_NotificationIn</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = CDC_NotificationIn &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint1
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;VCOM_CheckSerialState
</UL>

<P><STRONG><a name="[44]"></a>VCOM_Serial2Usb</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = VCOM_Serial2Usb &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[96]"></a>VCOM_Usb2Serial</STRONG> (Thumb, 48 bytes, Stack size 20 bytes, cdcuser.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_OutBufAvailChar
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_RdOutBuf
</UL>

<P><STRONG><a name="[42]"></a>VCOM_CheckSerialState</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, cdcuser.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = VCOM_CheckSerialState &rArr; CDC_NotificationIn &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_NotificationIn
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetSerialState
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3e]"></a>SST25_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SST25_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysInit
</UL>

<P><STRONG><a name="[9d]"></a>SST25_Erase</STRONG> (Thumb, 126 bytes, Stack size 16 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SST25_Erase &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
</UL>

<P><STRONG><a name="[9e]"></a>_SST25_Write</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
</UL>
<BR>[Called By]<UL><LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Write
</UL>

<P><STRONG><a name="[87]"></a>SST25_Write</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SST25_Write &rArr; _SST25_Write &rArr; SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryWrite
</UL>

<P><STRONG><a name="[82]"></a>SST25_Read</STRONG> (Thumb, 112 bytes, Stack size 24 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SST25_Read &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
</UL>
<BR>[Called By]<UL><LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryWrite
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryRead
</UL>

<P><STRONG><a name="[b4]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[4c]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sysinit
</UL>

<P><STRONG><a name="[83]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_TestUnitReady
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInFormat
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_RWSetup
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryVerify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryWrite
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryRead
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_GetLineCoding
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ReqSetClrFeature
</UL>

<P><STRONG><a name="[b6]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[b7]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[84]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_GetCBW
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DataInTransfer
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryVerify
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryWrite
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_SetCSW
<LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MSC_MemoryRead
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CDC_SetLineCoding
</UL>

<P><STRONG><a name="[b8]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[ba]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[5a]"></a>USB_ReqGetDescriptor</STRONG> (Thumb, 252 bytes, Stack size 8 bytes, usbcore.o(i.USB_ReqGetDescriptor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = USB_ReqGetDescriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[58]"></a>USB_ReqGetStatus</STRONG> (Thumb, 164 bytes, Stack size 0 bytes, usbcore.o(i.USB_ReqGetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[59]"></a>USB_ReqSetClrFeature</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, usbcore.o(i.USB_ReqSetClrFeature))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = USB_ReqSetClrFeature &rArr; USB_WriteEP
</UL>
<BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WakeUpCfg
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_SetStallEP
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ClrStallEP
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_WriteEP
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[5c]"></a>USB_ReqSetConfiguration</STRONG> (Thumb, 402 bytes, Stack size 24 bytes, usbcore.o(i.USB_ReqSetConfiguration))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = USB_ReqSetConfiguration &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_Configure
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[5e]"></a>USB_ReqSetInterface</STRONG> (Thumb, 296 bytes, Stack size 40 bytes, usbcore.o(i.USB_ReqSetInterface))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = USB_ReqSetInterface &rArr; USB_ConfigEP
</UL>
<BR>[Calls]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ResetEP
<LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EnableEP
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_DisableEP
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_ConfigEP
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
</UL>

<P><STRONG><a name="[4a]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, system_mkl25z4.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_EndPoint0
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[bb]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[bc]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[bd]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[4d]"></a>SpSub</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, flash_ramfunc.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_SectorErase (via Veneer)
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Flash_ByteProgram (via Veneer)
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[33]"></a>NVIC_SystemReset</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, flashprog.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramPage
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;myFMC_Erase
</UL>

<P><STRONG><a name="[3a]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, project_bootloader.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTMR_init
</UL>

<P><STRONG><a name="[36]"></a>NVIC_SystemReset</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, project_bootloader.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LPTimerTask
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[71]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, usbhw.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USB_IntrEna
</UL>

<P><STRONG><a name="[9a]"></a>SST25__Status</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
</UL>
<BR>[Called By]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Read
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__GlobalProtect
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__WriteEnable
</UL>

<P><STRONG><a name="[9c]"></a>SST25__WriteEnable</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, sst25.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SST25__WriteEnable &rArr; SST25__Status &rArr; halSpiWriteByte
</UL>
<BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_SST25_Write
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25_Erase
</UL>

<P><STRONG><a name="[9f]"></a>SST25__GlobalProtect</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, sst25.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;halSpiWriteByte
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SST25__Status
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
